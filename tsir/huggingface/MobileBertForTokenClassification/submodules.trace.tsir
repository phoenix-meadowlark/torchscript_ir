MobileBertForTokenClassification(
  (mobilebert): MobileBertModel(
    (embeddings): MobileBertEmbeddings(
      (word_embeddings): Embedding(30522, 128, padding_idx=0)
      (position_embeddings): Embedding(512, 512)
      (token_type_embeddings): Embedding(2, 512)
      (embedding_transformation): Linear(in_features=384, out_features=512, bias=True)
      (LayerNorm): NoNorm()
      (dropout): Dropout(p=0.0, inplace=False)
    )
    (encoder): MobileBertEncoder(
      (layer): ModuleList(
        (0): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (1): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (2): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (3): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (4): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (5): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (6): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (7): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (8): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (9): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (10): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (11): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (12): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (13): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (14): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (15): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (16): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (17): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (18): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (19): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (20): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (21): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (22): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
        (23): MobileBertLayer(
          (attention): MobileBertAttention(
            (self): MobileBertSelfAttention(
              (query): Linear(in_features=128, out_features=128, bias=True)
              (key): Linear(in_features=128, out_features=128, bias=True)
              (value): Linear(in_features=512, out_features=128, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): MobileBertSelfOutput(
              (dense): Linear(in_features=128, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (intermediate): MobileBertIntermediate(
            (dense): Linear(in_features=128, out_features=512, bias=True)
          )
          (output): MobileBertOutput(
            (dense): Linear(in_features=512, out_features=128, bias=True)
            (LayerNorm): NoNorm()
            (bottleneck): OutputBottleneck(
              (dense): Linear(in_features=128, out_features=512, bias=True)
              (LayerNorm): NoNorm()
              (dropout): Dropout(p=0.0, inplace=False)
            )
          )
          (bottleneck): Bottleneck(
            (input): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
            (attention): BottleneckLayer(
              (dense): Linear(in_features=512, out_features=128, bias=True)
              (LayerNorm): NoNorm()
            )
          )
          (ffn): ModuleList(
            (0): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (1): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
            (2): FFNLayer(
              (intermediate): MobileBertIntermediate(
                (dense): Linear(in_features=128, out_features=512, bias=True)
              )
              (output): FFNOutput(
                (dense): Linear(in_features=512, out_features=128, bias=True)
                (LayerNorm): NoNorm()
              )
            )
          )
        )
      )
    )
  )
  (dropout): Dropout(p=0.0, inplace=False)
  (classifier): Linear(in_features=512, out_features=2, bias=True)
)

MobileBertForTokenClassification._actual_script_module
MobileBertForTokenClassification.forward
  graph(%self.1 : __torch__.transformers.modeling_mobilebert.MobileBertForTokenClassification,
        %input_ids : Long(17:13, 13:1),
        %attention_mask.1 : Long(17:13, 13:1)):
    %11910 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="classifier"](%self.1)
    %11907 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.1)
    %11906 : __torch__.transformers.modeling_mobilebert.MobileBertModel = prim::GetAttr[name="mobilebert"](%self.1)
    %13098 : Tensor = prim::CallMethod[name="forward"](%11906, %input_ids, %attention_mask.1)
    %13099 : Tensor = prim::CallMethod[name="forward"](%11907, %13098)
    %13100 : Tensor = prim::CallMethod[name="forward"](%11910, %13099)
    %8566 : (Float(17:26, 13:2, 2:1)) = prim::TupleConstruct(%13100)
    return (%8566)

MobileBertForTokenClassification.classifier
Linear._actual_script_module
  graph(%self : __torch__.torch.nn.modules.linear.Linear,
        %5 : Float(17:6656, 13:512, 512:1)):
    %1 : Tensor = prim::GetAttr[name="bias"](%self)
    %2 : Tensor = prim::GetAttr[name="weight"](%self)
    %3 : Float(512:1, 2:512) = aten::t(%2), scope: __module.classifier # torch/nn/functional.py:1676:0
    %output : Float(17:26, 13:2, 2:1) = aten::matmul(%5, %3), scope: __module.classifier # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.classifier # torch/nn/functional.py:1678:0
    %7 : Float(17:26, 13:2, 2:1) = aten::add_(%output, %1, %6), scope: __module.classifier # torch/nn/functional.py:1678:0
    return (%7)

MobileBertForTokenClassification.dropout
Dropout._actual_script_module
  graph(%self.1067 : __torch__.torch.nn.modules.dropout.Dropout,
        %4 : Float(17:6656, 13:512, 512:1)):
    %1 : float = prim::Constant[value=0.](), scope: __module.dropout # torch/nn/functional.py:973:0
    %2 : bool = prim::Constant[value=0](), scope: __module.dropout # torch/nn/functional.py:973:0
    %input : Float(17:6656, 13:512, 512:1) = aten::dropout(%4, %1, %2), scope: __module.dropout # torch/nn/functional.py:973:0
    return (%input)

MobileBertForTokenClassification.mobilebert
MobileBertModel._actual_script_module
  graph(%self.2 : __torch__.transformers.modeling_mobilebert.MobileBertModel,
        %input_ids : Long(17:13, 13:1),
        %attention_mask.1 : Long(17:13, 13:1)):
    %1 : __torch__.transformers.modeling_mobilebert.MobileBertEncoder = prim::GetAttr[name="encoder"](%self.2)
    %2 : __torch__.transformers.modeling_mobilebert.MobileBertEmbeddings = prim::GetAttr[name="embeddings"](%self.2)
    %3 : int = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_mobilebert.py:871:0
    %4 : int = aten::size(%input_ids, %3), scope: __module.mobilebert # transformers/modeling_mobilebert.py:871:0
    %6 : Long() = prim::NumToTensor(%4), scope: __module.mobilebert
    %7 : int = aten::Int(%6), scope: __module.mobilebert
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert # transformers/modeling_mobilebert.py:871:0
    %9 : int = aten::size(%input_ids, %8), scope: __module.mobilebert # transformers/modeling_mobilebert.py:871:0
    %10 : Long() = prim::NumToTensor(%9), scope: __module.mobilebert
    %11 : int = aten::Int(%10), scope: __module.mobilebert
    %12 : int[] = prim::ListConstruct(%7, %11), scope: __module.mobilebert
    %13 : int = prim::Constant[value=4](), scope: __module.mobilebert # transformers/modeling_mobilebert.py:882:0
    %14 : int = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_mobilebert.py:882:0
    %15 : Device = prim::Constant[value="cpu"](), scope: __module.mobilebert # transformers/modeling_mobilebert.py:882:0
    %16 : bool = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_mobilebert.py:882:0
    %input.5 : Long(17:13, 13:1) = aten::zeros(%12, %13, %14, %15, %16), scope: __module.mobilebert # transformers/modeling_mobilebert.py:882:0
    %18 : int = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %19 : int = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %20 : int = prim::Constant[value=9223372036854775807](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %21 : int = prim::Constant[value=1](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %22 : Long(17:13, 13:1) = aten::slice(%attention_mask.1, %18, %19, %20, %21), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %24 : int = prim::Constant[value=1](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %25 : Long(17:13, 1:13, 13:1) = aten::unsqueeze(%22, %24), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %26 : int = prim::Constant[value=2](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %27 : Long(17:13, 1:13, 1:13, 13:1) = aten::unsqueeze(%25, %26), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %28 : int = prim::Constant[value=3](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %29 : int = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %30 : int = prim::Constant[value=9223372036854775807](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %31 : int = prim::Constant[value=1](), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %extended_attention_mask : Long(17:13, 1:13, 1:13, 13:1) = aten::slice(%27, %28, %29, %30, %31), scope: __module.mobilebert # transformers/modeling_utils.py:244:0
    %33 : int = prim::Constant[value=6](), scope: __module.mobilebert # transformers/modeling_utils.py:257:0
    %34 : bool = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_utils.py:257:0
    %35 : bool = prim::Constant[value=0](), scope: __module.mobilebert # transformers/modeling_utils.py:257:0
    %36 : None = prim::Constant(), scope: __module.mobilebert
    %37 : Float(17:13, 1:13, 1:13, 13:1) = aten::to(%extended_attention_mask, %33, %34, %35, %36), scope: __module.mobilebert # transformers/modeling_utils.py:257:0
    %38 : float = prim::Constant[value=1.](), scope: __module.mobilebert # torch/tensor.py:396:0
    %39 : int = prim::Constant[value=1](), scope: __module.mobilebert # torch/tensor.py:396:0
    %40 : Float(17:13, 1:13, 1:13, 13:1) = aten::rsub(%37, %38, %39), scope: __module.mobilebert # torch/tensor.py:396:0
    %41 : Double() = prim::Constant[value={-10000}](), scope: __module.mobilebert # transformers/modeling_utils.py:258:0
    %attention_mask : Float(17:13, 1:13, 1:13, 13:1) = aten::mul(%40, %41), scope: __module.mobilebert # transformers/modeling_utils.py:258:0
    %45 : Tensor = prim::CallMethod[name="forward"](%2, %input_ids, %input.5)
    %46 : Tensor = prim::CallMethod[name="forward"](%1, %45, %attention_mask)
    return (%46)

MobileBertModel.embeddings
MobileBertEmbeddings._actual_script_module
  graph(%self.3 : __torch__.transformers.modeling_mobilebert.MobileBertEmbeddings,
        %input_ids : Long(17:13, 13:1),
        %input.5 : Long(17:13, 13:1)):
    %3 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.3)
    %4 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.3)
    %5 : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="token_type_embeddings"](%self.3)
    %6 : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="position_embeddings"](%self.3)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="embedding_transformation"](%self.3)
    %8 : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="word_embeddings"](%self.3)
    %9 : Tensor = prim::GetAttr[name="position_ids"](%self.3)
    %13 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:185:0
    %14 : int = aten::size(%input_ids, %13), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:185:0
    %seq_length : Long() = prim::NumToTensor(%14), scope: __module.mobilebert/__module.mobilebert.embeddings
    %16 : int = aten::Int(%seq_length), scope: __module.mobilebert/__module.mobilebert.embeddings
    %17 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %18 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %19 : int = prim::Constant[value=9223372036854775807](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %20 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %21 : Long(1:512, 512:1) = aten::slice(%9, %17, %18, %19, %20), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %22 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %23 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %24 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %input.4 : Long(1:512, 13:1) = aten::slice(%21, %22, %23, %16, %24), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:192:0
    %77 : Tensor = prim::CallMethod[name="forward"](%8, %input_ids)
    %27 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %28 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %29 : int = prim::Constant[value=9223372036854775807](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %30 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %31 : Float(17:1664, 13:128, 128:1) = aten::slice(%77, %27, %28, %29, %30), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %32 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %33 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %34 : int = prim::Constant[value=9223372036854775807](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %35 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %input.1 : Float(17:1664, 12:128, 128:1) = aten::slice(%31, %32, %33, %34, %35), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:209:0
    %37 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %38 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %39 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %40 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %41 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %42 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %43 : int[] = prim::ListConstruct(%37, %38, %39, %40, %41, %42), scope: __module.mobilebert/__module.mobilebert.embeddings
    %44 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %45 : Float(17:1664, 13:128, 128:1) = aten::constant_pad_nd(%input.1, %43, %44), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %46 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %48 : int = prim::Constant[value=9223372036854775807](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %50 : Float(17:1664, 13:128, 128:1) = aten::slice(%77, %46, %47, %48, %49), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %51 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %52 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %53 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %54 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %input.2 : Float(17:1664, 12:128, 128:1) = aten::slice(%50, %51, %52, %53, %54), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:211:0
    %56 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %57 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %58 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %59 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %60 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %61 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %62 : int[] = prim::ListConstruct(%56, %57, %58, %59, %60, %61), scope: __module.mobilebert/__module.mobilebert.embeddings
    %63 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %64 : Float(17:1664, 13:128, 128:1) = aten::constant_pad_nd(%input.2, %62, %63), scope: __module.mobilebert/__module.mobilebert.embeddings # torch/nn/functional.py:3552:0
    %65 : Tensor[] = prim::ListConstruct(%45, %77, %64), scope: __module.mobilebert/__module.mobilebert.embeddings
    %66 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:207:0
    %input.3 : Float(17:4992, 13:384, 384:1) = aten::cat(%65, %66), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:207:0
    %78 : Tensor = prim::CallMethod[name="forward"](%7, %input.3)
    %79 : Tensor = prim::CallMethod[name="forward"](%6, %input.4)
    %80 : Tensor = prim::CallMethod[name="forward"](%5, %input.5)
    %71 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:222:0
    %72 : Float(17:6656, 13:512, 512:1) = aten::add(%78, %79, %71), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:222:0
    %73 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:222:0
    %input_tensor.1 : Float(17:6656, 13:512, 512:1) = aten::add(%72, %80, %73), scope: __module.mobilebert/__module.mobilebert.embeddings # transformers/modeling_mobilebert.py:222:0
    %81 : Tensor = prim::CallMethod[name="forward"](%4, %input_tensor.1)
    %82 : Tensor = prim::CallMethod[name="forward"](%3, %81)
    return (%82)

MobileBertModel.encoder
MobileBertEncoder._actual_script_module
  graph(%self.10 : __torch__.transformers.modeling_mobilebert.MobileBertEncoder,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="23"](%3)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="22"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %8 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="21"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %10 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="20"](%9)
    %11 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %12 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="19"](%11)
    %13 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %14 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="18"](%13)
    %15 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %16 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="17"](%15)
    %17 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %18 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="16"](%17)
    %19 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %20 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="15"](%19)
    %21 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %22 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="14"](%21)
    %23 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %24 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="13"](%23)
    %25 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %26 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="12"](%25)
    %27 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %28 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="11"](%27)
    %29 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %30 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="10"](%29)
    %31 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %32 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="9"](%31)
    %33 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %34 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="8"](%33)
    %35 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %36 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="7"](%35)
    %37 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %38 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="6"](%37)
    %39 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %40 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="5"](%39)
    %41 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %42 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="4"](%41)
    %43 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %44 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="3"](%43)
    %45 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %46 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="2"](%45)
    %47 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %48 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="1"](%47)
    %49 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="layer"](%self.10)
    %50 : __torch__.transformers.modeling_mobilebert.MobileBertLayer = prim::GetAttr[name="0"](%49)
    %75 : Tensor = prim::CallMethod[name="forward"](%50, %1, %attention_mask)
    %76 : Tensor = prim::CallMethod[name="forward"](%48, %75, %attention_mask)
    %77 : Tensor = prim::CallMethod[name="forward"](%46, %76, %attention_mask)
    %78 : Tensor = prim::CallMethod[name="forward"](%44, %77, %attention_mask)
    %79 : Tensor = prim::CallMethod[name="forward"](%42, %78, %attention_mask)
    %80 : Tensor = prim::CallMethod[name="forward"](%40, %79, %attention_mask)
    %81 : Tensor = prim::CallMethod[name="forward"](%38, %80, %attention_mask)
    %82 : Tensor = prim::CallMethod[name="forward"](%36, %81, %attention_mask)
    %83 : Tensor = prim::CallMethod[name="forward"](%34, %82, %attention_mask)
    %84 : Tensor = prim::CallMethod[name="forward"](%32, %83, %attention_mask)
    %85 : Tensor = prim::CallMethod[name="forward"](%30, %84, %attention_mask)
    %86 : Tensor = prim::CallMethod[name="forward"](%28, %85, %attention_mask)
    %87 : Tensor = prim::CallMethod[name="forward"](%26, %86, %attention_mask)
    %88 : Tensor = prim::CallMethod[name="forward"](%24, %87, %attention_mask)
    %89 : Tensor = prim::CallMethod[name="forward"](%22, %88, %attention_mask)
    %90 : Tensor = prim::CallMethod[name="forward"](%20, %89, %attention_mask)
    %91 : Tensor = prim::CallMethod[name="forward"](%18, %90, %attention_mask)
    %92 : Tensor = prim::CallMethod[name="forward"](%16, %91, %attention_mask)
    %93 : Tensor = prim::CallMethod[name="forward"](%14, %92, %attention_mask)
    %94 : Tensor = prim::CallMethod[name="forward"](%12, %93, %attention_mask)
    %95 : Tensor = prim::CallMethod[name="forward"](%10, %94, %attention_mask)
    %96 : Tensor = prim::CallMethod[name="forward"](%8, %95, %attention_mask)
    %97 : Tensor = prim::CallMethod[name="forward"](%6, %96, %attention_mask)
    %98 : Tensor = prim::CallMethod[name="forward"](%4, %97, %attention_mask)
    return (%98)

MobileBertEmbeddings.LayerNorm
NoNorm._actual_script_module
  graph(%self.8 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.8)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.8)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.1, %3), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.6 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.6)

MobileBertEmbeddings.dropout
Dropout._actual_script_module
  graph(%self.9 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.dropout # torch/nn/functional.py:973:0
    %input.7 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.dropout # torch/nn/functional.py:973:0
    return (%input.7)

MobileBertEmbeddings.embedding_transformation
Linear._actual_script_module
  graph(%self.5 : __torch__.torch.nn.modules.linear.Linear,
        %input.3 : Float(17:4992, 13:384, 384:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.5)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.5)
    %4 : Float(384:1, 512:384) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.embedding_transformation # torch/nn/functional.py:1676:0
    %output.1 : Float(17:6656, 13:512, 512:1) = aten::matmul(%input.3, %4), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.embedding_transformation # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.embedding_transformation # torch/nn/functional.py:1678:0
    %inputs_embeds : Float(17:6656, 13:512, 512:1) = aten::add_(%output.1, %2, %6), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.embedding_transformation # torch/nn/functional.py:1678:0
    return (%inputs_embeds)

MobileBertEmbeddings.position_embeddings
Embedding._actual_script_module
  graph(%self.6 : __torch__.torch.nn.modules.sparse.Embedding,
        %input.4 : Long(1:512, 13:1)):
    %2 : Tensor = prim::GetAttr[name="weight"](%self.6)
    %3 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.position_embeddings # torch/nn/functional.py:1814:0
    %4 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.position_embeddings # torch/nn/functional.py:1814:0
    %5 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.position_embeddings # torch/nn/functional.py:1814:0
    %position_embeddings : Float(1:6656, 13:512, 512:1) = aten::embedding(%2, %input.4, %3, %4, %5), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.position_embeddings # torch/nn/functional.py:1814:0
    return (%position_embeddings)

MobileBertEmbeddings.token_type_embeddings
Embedding._actual_script_module
  graph(%self.7 : __torch__.torch.nn.modules.sparse.Embedding,
        %input.5 : Long(17:13, 13:1)):
    %2 : Tensor = prim::GetAttr[name="weight"](%self.7)
    %3 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.token_type_embeddings # torch/nn/functional.py:1814:0
    %4 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.token_type_embeddings # torch/nn/functional.py:1814:0
    %5 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.token_type_embeddings # torch/nn/functional.py:1814:0
    %token_type_embeddings : Float(17:6656, 13:512, 512:1) = aten::embedding(%2, %input.5, %3, %4, %5), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.token_type_embeddings # torch/nn/functional.py:1814:0
    return (%token_type_embeddings)

MobileBertEmbeddings.word_embeddings
Embedding._actual_script_module
  graph(%self.4 : __torch__.torch.nn.modules.sparse.Embedding,
        %input_ids : Long(17:13, 13:1)):
    %2 : Tensor = prim::GetAttr[name="weight"](%self.4)
    %3 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.word_embeddings # torch/nn/functional.py:1814:0
    %4 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.word_embeddings # torch/nn/functional.py:1814:0
    %5 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.word_embeddings # torch/nn/functional.py:1814:0
    %inputs_embeds.1 : Float(17:1664, 13:128, 128:1) = aten::embedding(%2, %input_ids, %3, %4, %5), scope: __module.mobilebert/__module.mobilebert.embeddings/__module.mobilebert.embeddings.word_embeddings # torch/nn/functional.py:1814:0
    return (%inputs_embeds.1)

ModuleList.*
  module had no methods with graph attrs.

MobileBertLayer._actual_script_module
  graph(%self.11 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.11)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.11)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.11)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.11)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.11)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.11)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.11)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.19 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.19)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.19)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.12 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.12)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.12)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.46 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.46)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.23 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.23)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.48 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.48)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.48)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.48)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.8 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.8)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.25 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.25)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.25)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.4 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.4)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.20 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.20)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.20)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.20)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.20)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %x.2 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %query_layer.1 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.2, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %x.4 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %key_layer.1 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.4, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %x.6 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %value_layer.1 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.6, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.1, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.1 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.1, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.2 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.1, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.9 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.2, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %input.10 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.9, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.10)
    %context_layer.1 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.1), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.1, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.2 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.2, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.2, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self
    %input.11 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.2, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.11)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.24 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.10 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.1 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.10, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.1)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.22 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.22)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.22)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.key # torch/nn/functional.py:1676:0
    %output.5 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.key # torch/nn/functional.py:1678:0
    %x.3 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.5, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.3)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.21 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.21)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.21)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.query # torch/nn/functional.py:1676:0
    %output.4 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.query # torch/nn/functional.py:1678:0
    %x.1 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.4, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.1)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.23 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.23)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.23)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.value # torch/nn/functional.py:1676:0
    %output.6 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.value # torch/nn/functional.py:1678:0
    %x.5 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.6, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.self/__module.mobilebert.encoder.layer.0.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.5)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.27 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.4 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.27)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.27)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.4, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.12 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.12)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.26 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.26)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.26)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.dense # torch/nn/functional.py:1676:0
    %output.7 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.1 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.7, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.attention/__module.mobilebert.encoder.layer.0.attention.output/__module.mobilebert.encoder.layer.0.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.1)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.47 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.47)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.47)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.intermediate/__module.mobilebert.encoder.layer.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.14 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.intermediate/__module.mobilebert.encoder.layer.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.intermediate/__module.mobilebert.encoder.layer.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.22 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.14, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.intermediate/__module.mobilebert.encoder.layer.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.22)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.50 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.8 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.50)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.50)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.8, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.24 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.24)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.51 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.51)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.51)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.51)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.9 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.9)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.49 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.49)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.49)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.dense # torch/nn/functional.py:1676:0
    %output.15 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.dense # torch/nn/functional.py:1678:0
    %layer_output.1 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.15, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.1)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.54 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.9 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.54)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.54)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.9, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.26 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.26)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.52 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.52)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.52)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.16 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.25 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.16, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.25)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.53 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.5 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.output/__module.mobilebert.encoder.layer.0.output.bottleneck/__module.mobilebert.encoder.layer.0.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.5)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.16 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.16)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.16)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.13 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.13)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.13)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.15 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.15)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.15)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.1 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.1)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.14 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.14)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.14)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.2 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.2 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.2, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.input/__module.mobilebert.encoder.layer.0.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.2)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.18 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.18)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.18)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.8 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.8)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.17 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.17)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.17)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.3 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.3 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.3, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.bottleneck/__module.mobilebert.encoder.layer.0.bottleneck.attention/__module.mobilebert.encoder.layer.0.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.3)

FFNLayer._actual_script_module
  graph(%self.28 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.28)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.28)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.29 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.29)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.14 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.14)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.31 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.31)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.31)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.5 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.5)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.30 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.30)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.30)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.intermediate/__module.mobilebert.encoder.layer.0.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.8 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.intermediate/__module.mobilebert.encoder.layer.0.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.intermediate/__module.mobilebert.encoder.layer.0.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.13 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.8, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.intermediate/__module.mobilebert.encoder.layer.0.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.13)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.33 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.5 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.33)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.33)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.5, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.15 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.15)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.32 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.32)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.32)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.9 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.2 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.0/__module.mobilebert.encoder.layer.0.ffn.0.output/__module.mobilebert.encoder.layer.0.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.2)

FFNLayer._actual_script_module
  graph(%self.34 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.34)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.34)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.35 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.35)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.17 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.17)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.37 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.37)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.37)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.6 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.6)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.36 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.36)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.36)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.intermediate/__module.mobilebert.encoder.layer.0.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.10 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.intermediate/__module.mobilebert.encoder.layer.0.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.intermediate/__module.mobilebert.encoder.layer.0.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.16 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.10, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.intermediate/__module.mobilebert.encoder.layer.0.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.16)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.39 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.6 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.39)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.39)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.6, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.18 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.18)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.38 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.38)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.38)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.11 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.3 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.11, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.1/__module.mobilebert.encoder.layer.0.ffn.1.output/__module.mobilebert.encoder.layer.0.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.3)

FFNLayer._actual_script_module
  graph(%self.40 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.40)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.40)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.41 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.41)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.20 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.20)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.43 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.43)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.43)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.7 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.7)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.42 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.42)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.42)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.intermediate/__module.mobilebert.encoder.layer.0.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.12 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.intermediate/__module.mobilebert.encoder.layer.0.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.intermediate/__module.mobilebert.encoder.layer.0.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.19 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.12, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.intermediate/__module.mobilebert.encoder.layer.0.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.19)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.45 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.7 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.45)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.45)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.7, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.21 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.21)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.44 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.44)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.44)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.13 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.4 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.13, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.0/__module.mobilebert.encoder.layer.0.ffn.2/__module.mobilebert.encoder.layer.0.ffn.2.output/__module.mobilebert.encoder.layer.0.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.4)

MobileBertLayer._actual_script_module
  graph(%self.55 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.55)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.55)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.55)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.55)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.55)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.55)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.55)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.63 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.63)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.63)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.56 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.56)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.56)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.90 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.90)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.42 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.42)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.92 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.92)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.92)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.92)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.16 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.16)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.69 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.69)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.69)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.12 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.12)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.64 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.64)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.64)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.64)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.64)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %x.8 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %query_layer.2 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.8, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %x.10 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %key_layer.2 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.10, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %x.12 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %value_layer.2 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.12, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.2, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.3 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.2, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.4 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.3, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.28 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.4, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %input.29 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.28, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.29)
    %context_layer.3 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.2), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.3, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.4 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.4, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.4, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self
    %input.30 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.4, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.30)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.68 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.29 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.2 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.29, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.2)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.66 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.66)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.66)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.key # torch/nn/functional.py:1676:0
    %output.20 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.key # torch/nn/functional.py:1678:0
    %x.9 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.20, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.9)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.65 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.65)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.65)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.query # torch/nn/functional.py:1676:0
    %output.19 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.query # torch/nn/functional.py:1678:0
    %x.7 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.19, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.7)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.67 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.67)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.67)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.value # torch/nn/functional.py:1676:0
    %output.21 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.value # torch/nn/functional.py:1678:0
    %x.11 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.21, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.self/__module.mobilebert.encoder.layer.1.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.11)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.71 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.12 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.71)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.71)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.12, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.31 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.31)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.70 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.70)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.70)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.dense # torch/nn/functional.py:1676:0
    %output.22 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.6 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.22, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.attention/__module.mobilebert.encoder.layer.1.attention.output/__module.mobilebert.encoder.layer.1.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.6)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.91 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.91)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.91)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.intermediate/__module.mobilebert.encoder.layer.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.29 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.intermediate/__module.mobilebert.encoder.layer.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.intermediate/__module.mobilebert.encoder.layer.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.41 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.29, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.intermediate/__module.mobilebert.encoder.layer.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.41)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.94 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.16 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.94)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.94)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.16, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.43 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.43)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.95 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.95)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.95)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.95)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.17 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.17)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.93 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.93)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.93)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.dense # torch/nn/functional.py:1676:0
    %output.30 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.dense # torch/nn/functional.py:1678:0
    %layer_output.2 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.30, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.2)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.98 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.17 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.98)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.98)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.17, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.45 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.45)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.96 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.96)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.96)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.31 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.44 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.31, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.44)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.97 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.10 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.output/__module.mobilebert.encoder.layer.1.output.bottleneck/__module.mobilebert.encoder.layer.1.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.10)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.60 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.60)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.60)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.57 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.57)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.57)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.59 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.59)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.59)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.2 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.2)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.58 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.58)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.58)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.17 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.10 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.17, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.input/__module.mobilebert.encoder.layer.1.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.10)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.62 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.62)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.62)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.27 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.27)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.61 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.61)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.61)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.18 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.11 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.18, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.bottleneck/__module.mobilebert.encoder.layer.1.bottleneck.attention/__module.mobilebert.encoder.layer.1.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.11)

FFNLayer._actual_script_module
  graph(%self.72 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.72)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.72)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.73 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.73)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.33 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.33)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.75 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.75)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.75)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.13 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.13)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.74 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.74)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.74)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.intermediate/__module.mobilebert.encoder.layer.1.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.23 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.intermediate/__module.mobilebert.encoder.layer.1.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.intermediate/__module.mobilebert.encoder.layer.1.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.32 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.23, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.intermediate/__module.mobilebert.encoder.layer.1.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.32)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.77 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.13 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.77)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.77)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.13, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.34 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.34)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.76 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.76)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.76)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.24 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.7 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.24, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.0/__module.mobilebert.encoder.layer.1.ffn.0.output/__module.mobilebert.encoder.layer.1.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.7)

FFNLayer._actual_script_module
  graph(%self.78 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.78)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.78)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.79 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.79)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.36 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.36)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.81 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.81)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.81)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.14 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.14)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.80 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.80)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.80)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.intermediate/__module.mobilebert.encoder.layer.1.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.25 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.intermediate/__module.mobilebert.encoder.layer.1.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.intermediate/__module.mobilebert.encoder.layer.1.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.35 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.25, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.intermediate/__module.mobilebert.encoder.layer.1.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.35)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.83 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.14 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.83)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.83)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.14, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.37 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.37)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.82 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.82)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.82)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.26 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.8 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.26, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.1/__module.mobilebert.encoder.layer.1.ffn.1.output/__module.mobilebert.encoder.layer.1.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.8)

FFNLayer._actual_script_module
  graph(%self.84 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.84)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.84)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.85 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.85)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.39 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.39)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.87 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.87)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.87)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.15 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.15)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.86 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.86)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.86)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.intermediate/__module.mobilebert.encoder.layer.1.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.27 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.intermediate/__module.mobilebert.encoder.layer.1.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.intermediate/__module.mobilebert.encoder.layer.1.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.38 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.27, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.intermediate/__module.mobilebert.encoder.layer.1.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.38)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.89 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.15 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.89)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.89)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.15, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.40 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.40)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.88 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.88)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.88)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.28 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.9 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.28, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.1/__module.mobilebert.encoder.layer.1.ffn.2/__module.mobilebert.encoder.layer.1.ffn.2.output/__module.mobilebert.encoder.layer.1.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.9)

MobileBertLayer._actual_script_module
  graph(%self.99 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.99)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.99)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.99)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.99)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.99)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.99)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.99)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.107 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.107)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.107)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.100 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.100)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.100)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.134 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.134)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.61 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.61)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.136 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.136)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.136)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.136)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.24 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.24)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.113 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.113)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.113)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.20 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.20)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.108 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.108)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.108)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.108)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.108)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %x.14 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %query_layer.3 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.14, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %x.16 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %key_layer.3 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.16, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %x.18 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %value_layer.3 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.18, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.3, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.5 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.3, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.6 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.5, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.47 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.6, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %input.48 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.47, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.48)
    %context_layer.5 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.5, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.6 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.6, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.6, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self
    %input.49 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.6, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.49)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.112 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.48 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.3 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.48, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.3)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.110 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.110)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.110)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.key # torch/nn/functional.py:1676:0
    %output.35 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.key # torch/nn/functional.py:1678:0
    %x.15 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.35, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.15)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.109 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.109)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.109)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.query # torch/nn/functional.py:1676:0
    %output.34 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.query # torch/nn/functional.py:1678:0
    %x.13 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.34, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.13)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.111 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.111)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.111)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.value # torch/nn/functional.py:1676:0
    %output.36 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.value # torch/nn/functional.py:1678:0
    %x.17 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.36, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.self/__module.mobilebert.encoder.layer.2.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.17)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.115 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.20 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.115)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.115)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.20, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.50 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.50)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.114 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.114)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.114)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.dense # torch/nn/functional.py:1676:0
    %output.37 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.11 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.37, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.attention/__module.mobilebert.encoder.layer.2.attention.output/__module.mobilebert.encoder.layer.2.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.11)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.135 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.135)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.135)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.intermediate/__module.mobilebert.encoder.layer.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.44 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.intermediate/__module.mobilebert.encoder.layer.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.intermediate/__module.mobilebert.encoder.layer.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.60 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.44, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.intermediate/__module.mobilebert.encoder.layer.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.60)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.138 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.24 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.138)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.138)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.24, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.62 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.62)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.139 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.139)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.139)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.139)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.25 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.25)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.137 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.137)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.137)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.dense # torch/nn/functional.py:1676:0
    %output.45 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.dense # torch/nn/functional.py:1678:0
    %layer_output.3 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.45, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.3)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.142 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.25 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.142)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.142)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.25, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.64 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.64)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.140 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.140)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.140)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.46 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.63 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.46, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.63)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.141 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.15 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.output/__module.mobilebert.encoder.layer.2.output.bottleneck/__module.mobilebert.encoder.layer.2.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.15)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.104 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.104)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.104)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.101 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.101)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.101)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.103 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.103)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.103)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.3 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.3)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.102 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.102)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.102)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.32 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.18 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.32, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.input/__module.mobilebert.encoder.layer.2.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.18)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.106 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.106)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.106)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.46 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.46)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.105 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.105)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.105)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.33 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.19 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.33, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.bottleneck/__module.mobilebert.encoder.layer.2.bottleneck.attention/__module.mobilebert.encoder.layer.2.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.19)

FFNLayer._actual_script_module
  graph(%self.116 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.116)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.116)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.117 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.117)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.52 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.52)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.119 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.119)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.119)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.21 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.21)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.118 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.118)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.118)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.intermediate/__module.mobilebert.encoder.layer.2.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.38 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.intermediate/__module.mobilebert.encoder.layer.2.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.intermediate/__module.mobilebert.encoder.layer.2.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.51 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.38, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.intermediate/__module.mobilebert.encoder.layer.2.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.51)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.121 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.21 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.121)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.121)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.21, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.53 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.53)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.120 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.120)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.120)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.39 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.12 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.39, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.0/__module.mobilebert.encoder.layer.2.ffn.0.output/__module.mobilebert.encoder.layer.2.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.12)

FFNLayer._actual_script_module
  graph(%self.122 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.122)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.122)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.123 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.123)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.55 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.55)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.125 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.125)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.125)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.22 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.22)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.124 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.124)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.124)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.intermediate/__module.mobilebert.encoder.layer.2.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.40 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.intermediate/__module.mobilebert.encoder.layer.2.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.intermediate/__module.mobilebert.encoder.layer.2.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.54 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.40, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.intermediate/__module.mobilebert.encoder.layer.2.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.54)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.127 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.22 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.127)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.127)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.22, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.56 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.56)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.126 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.126)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.126)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.41 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.13 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.41, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.1/__module.mobilebert.encoder.layer.2.ffn.1.output/__module.mobilebert.encoder.layer.2.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.13)

FFNLayer._actual_script_module
  graph(%self.128 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.128)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.128)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.129 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.129)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.58 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.58)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.131 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.131)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.131)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.23 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.23)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.130 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.130)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.130)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.intermediate/__module.mobilebert.encoder.layer.2.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.42 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.intermediate/__module.mobilebert.encoder.layer.2.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.intermediate/__module.mobilebert.encoder.layer.2.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.57 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.42, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.intermediate/__module.mobilebert.encoder.layer.2.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.57)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.133 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.23 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.133)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.133)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.23, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.59 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.59)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.132 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.132)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.132)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.43 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.14 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.43, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.2/__module.mobilebert.encoder.layer.2.ffn.2/__module.mobilebert.encoder.layer.2.ffn.2.output/__module.mobilebert.encoder.layer.2.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.14)

MobileBertLayer._actual_script_module
  graph(%self.143 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.143)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.143)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.143)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.143)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.143)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.143)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.143)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.151 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.151)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.151)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.144 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.144)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.144)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.178 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.178)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.80 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.intermediate # torch/nn/functional.py:1119:0
    return (%input.80)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.180 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.180)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.180)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.180)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.32 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.32)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.157 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.157)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.157)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.28 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.28)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.152 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.152)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.152)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.152)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.152)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %x.20 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %query_layer.4 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.20, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %x.22 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %key_layer.4 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.22, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %x.24 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %value_layer.4 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.24, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.4, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.7 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.4, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.8 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.7, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.66 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.8, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %input.67 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.66, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.67)
    %context_layer.7 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.7, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.8 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.8, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.8, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self
    %input.68 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.8, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.68)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.156 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.67 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.4 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.67, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.4)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.154 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.154)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.154)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.key # torch/nn/functional.py:1676:0
    %output.50 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.key # torch/nn/functional.py:1678:0
    %x.21 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.50, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.21)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.153 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.153)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.153)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.query # torch/nn/functional.py:1676:0
    %output.49 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.query # torch/nn/functional.py:1678:0
    %x.19 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.49, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.19)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.155 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.155)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.155)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.value # torch/nn/functional.py:1676:0
    %output.51 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.value # torch/nn/functional.py:1678:0
    %x.23 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.51, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.self/__module.mobilebert.encoder.layer.3.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.23)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.159 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.28 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.159)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.159)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.28, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.69 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.69)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.158 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.158)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.158)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.dense # torch/nn/functional.py:1676:0
    %output.52 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.16 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.52, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.attention/__module.mobilebert.encoder.layer.3.attention.output/__module.mobilebert.encoder.layer.3.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.16)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.179 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.179)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.179)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.intermediate/__module.mobilebert.encoder.layer.3.intermediate.dense # torch/nn/functional.py:1676:0
    %output.59 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.intermediate/__module.mobilebert.encoder.layer.3.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.intermediate/__module.mobilebert.encoder.layer.3.intermediate.dense # torch/nn/functional.py:1678:0
    %input.79 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.59, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.intermediate/__module.mobilebert.encoder.layer.3.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.79)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.182 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.32 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.182)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.182)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.32, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.81 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.81)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.183 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.183)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.183)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.183)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.33 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.33)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.181 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.181)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.181)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.dense # torch/nn/functional.py:1676:0
    %output.60 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.dense # torch/nn/functional.py:1678:0
    %layer_output.4 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.60, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.4)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.186 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.33 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.186)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.186)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.33, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.83 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.83)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.184 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.184)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.184)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.61 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.82 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.61, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.82)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.185 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.20 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.output/__module.mobilebert.encoder.layer.3.output.bottleneck/__module.mobilebert.encoder.layer.3.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.20)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.148 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.148)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.148)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.145 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.145)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.145)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.147 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.147)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.147)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.4 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.4)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.146 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.146)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.146)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.47 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.26 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.47, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.input/__module.mobilebert.encoder.layer.3.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.26)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.150 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.150)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.150)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.65 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.65)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.149 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.149)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.149)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.48 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.27 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.48, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.bottleneck/__module.mobilebert.encoder.layer.3.bottleneck.attention/__module.mobilebert.encoder.layer.3.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.27)

FFNLayer._actual_script_module
  graph(%self.160 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.160)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.160)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.161 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.161)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.71 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.71)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.163 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.163)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.163)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.29 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.29)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.162 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.162)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.162)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.intermediate/__module.mobilebert.encoder.layer.3.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.53 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.intermediate/__module.mobilebert.encoder.layer.3.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.intermediate/__module.mobilebert.encoder.layer.3.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.70 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.53, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.intermediate/__module.mobilebert.encoder.layer.3.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.70)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.165 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.29 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.165)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.165)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.29, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.72 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.72)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.164 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.164)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.164)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.54 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.17 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.54, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.0/__module.mobilebert.encoder.layer.3.ffn.0.output/__module.mobilebert.encoder.layer.3.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.17)

FFNLayer._actual_script_module
  graph(%self.166 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.166)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.166)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.167 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.167)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.74 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.74)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.169 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.169)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.169)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.30 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.30)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.168 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.168)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.168)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.intermediate/__module.mobilebert.encoder.layer.3.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.55 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.intermediate/__module.mobilebert.encoder.layer.3.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.intermediate/__module.mobilebert.encoder.layer.3.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.73 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.55, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.intermediate/__module.mobilebert.encoder.layer.3.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.73)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.171 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.30 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.171)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.171)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.30, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.75 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.75)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.170 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.170)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.170)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.56 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.18 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.56, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.1/__module.mobilebert.encoder.layer.3.ffn.1.output/__module.mobilebert.encoder.layer.3.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.18)

FFNLayer._actual_script_module
  graph(%self.172 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.172)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.172)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.173 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.173)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.77 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.77)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.175 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.175)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.175)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.31 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.31)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.174 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.174)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.174)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.intermediate/__module.mobilebert.encoder.layer.3.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.57 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.intermediate/__module.mobilebert.encoder.layer.3.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.intermediate/__module.mobilebert.encoder.layer.3.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.76 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.57, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.intermediate/__module.mobilebert.encoder.layer.3.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.76)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.177 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.31 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.177)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.177)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.31, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.78 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.78)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.176 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.176)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.176)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.58 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.19 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.58, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.3/__module.mobilebert.encoder.layer.3.ffn.2/__module.mobilebert.encoder.layer.3.ffn.2.output/__module.mobilebert.encoder.layer.3.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.19)

MobileBertLayer._actual_script_module
  graph(%self.187 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.187)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.187)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.187)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.187)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.187)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.187)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.187)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.195 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.195)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.195)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.188 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.188)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.188)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.222 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.222)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.99 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.intermediate # torch/nn/functional.py:1119:0
    return (%input.99)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.224 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.224)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.224)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.224)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.40 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.40)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.201 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.201)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.201)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.36 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.36)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.196 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.196)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.196)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.196)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.196)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %x.26 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %query_layer.5 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.26, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %x.28 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %key_layer.5 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.28, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %x.30 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %value_layer.5 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.30, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.5, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.9 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.5, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.10 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.9, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.85 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.10, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %input.86 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.85, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.86)
    %context_layer.9 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.9, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.10 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.10, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.10, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self
    %input.87 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.10, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.87)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.200 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.86 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.5 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.86, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.5)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.198 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.198)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.198)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.key # torch/nn/functional.py:1676:0
    %output.65 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.key # torch/nn/functional.py:1678:0
    %x.27 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.65, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.27)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.197 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.197)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.197)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.query # torch/nn/functional.py:1676:0
    %output.64 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.query # torch/nn/functional.py:1678:0
    %x.25 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.64, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.25)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.199 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.199)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.199)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.value # torch/nn/functional.py:1676:0
    %output.66 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.value # torch/nn/functional.py:1678:0
    %x.29 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.66, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.self/__module.mobilebert.encoder.layer.4.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.29)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.203 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.36 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.203)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.203)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.36, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.88 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.88)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.202 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.202)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.202)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.dense # torch/nn/functional.py:1676:0
    %output.67 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.21 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.67, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.attention/__module.mobilebert.encoder.layer.4.attention.output/__module.mobilebert.encoder.layer.4.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.21)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.223 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.223)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.223)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.intermediate/__module.mobilebert.encoder.layer.4.intermediate.dense # torch/nn/functional.py:1676:0
    %output.74 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.intermediate/__module.mobilebert.encoder.layer.4.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.intermediate/__module.mobilebert.encoder.layer.4.intermediate.dense # torch/nn/functional.py:1678:0
    %input.98 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.74, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.intermediate/__module.mobilebert.encoder.layer.4.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.98)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.226 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.40 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.226)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.226)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.40, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.100 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.100)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.227 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.227)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.227)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.227)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.41 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.41)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.225 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.225)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.225)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.dense # torch/nn/functional.py:1676:0
    %output.75 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.dense # torch/nn/functional.py:1678:0
    %layer_output.5 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.75, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.5)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.230 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.41 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.230)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.230)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.41, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.102 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.102)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.228 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.228)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.228)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.76 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.101 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.76, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.101)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.229 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.25 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.output/__module.mobilebert.encoder.layer.4.output.bottleneck/__module.mobilebert.encoder.layer.4.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.25)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.192 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.192)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.192)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.189 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.189)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.189)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.191 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.191)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.191)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.5 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.5)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.190 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.190)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.190)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.62 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.34 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.62, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.input/__module.mobilebert.encoder.layer.4.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.34)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.194 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.194)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.194)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.84 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.84)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.193 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.193)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.193)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.63 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.35 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.63, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.bottleneck/__module.mobilebert.encoder.layer.4.bottleneck.attention/__module.mobilebert.encoder.layer.4.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.35)

FFNLayer._actual_script_module
  graph(%self.204 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.204)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.204)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.205 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.205)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.90 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.90)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.207 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.207)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.207)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.37 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.37)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.206 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.206)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.206)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.intermediate/__module.mobilebert.encoder.layer.4.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.68 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.intermediate/__module.mobilebert.encoder.layer.4.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.intermediate/__module.mobilebert.encoder.layer.4.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.89 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.68, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.intermediate/__module.mobilebert.encoder.layer.4.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.89)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.209 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.37 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.209)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.209)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.37, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.91 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.91)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.208 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.208)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.208)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.69 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.22 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.69, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.0/__module.mobilebert.encoder.layer.4.ffn.0.output/__module.mobilebert.encoder.layer.4.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.22)

FFNLayer._actual_script_module
  graph(%self.210 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.210)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.210)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.211 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.211)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.93 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.93)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.213 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.213)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.213)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.38 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.38)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.212 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.212)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.212)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.intermediate/__module.mobilebert.encoder.layer.4.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.70 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.intermediate/__module.mobilebert.encoder.layer.4.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.intermediate/__module.mobilebert.encoder.layer.4.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.92 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.70, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.intermediate/__module.mobilebert.encoder.layer.4.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.92)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.215 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.38 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.215)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.215)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.38, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.94 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.94)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.214 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.214)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.214)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.71 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.23 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.71, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.1/__module.mobilebert.encoder.layer.4.ffn.1.output/__module.mobilebert.encoder.layer.4.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.23)

FFNLayer._actual_script_module
  graph(%self.216 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.216)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.216)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.217 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.217)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.96 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.96)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.219 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.219)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.219)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.39 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.39)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.218 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.218)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.218)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.intermediate/__module.mobilebert.encoder.layer.4.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.72 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.intermediate/__module.mobilebert.encoder.layer.4.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.intermediate/__module.mobilebert.encoder.layer.4.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.95 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.72, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.intermediate/__module.mobilebert.encoder.layer.4.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.95)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.221 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.39 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.221)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.221)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.39, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.97 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.97)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.220 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.220)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.220)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.73 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.24 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.73, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.4/__module.mobilebert.encoder.layer.4.ffn.2/__module.mobilebert.encoder.layer.4.ffn.2.output/__module.mobilebert.encoder.layer.4.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.24)

MobileBertLayer._actual_script_module
  graph(%self.231 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.231)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.231)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.231)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.231)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.231)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.231)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.231)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.239 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.239)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.239)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.232 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.232)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.232)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.266 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.266)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.118 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.intermediate # torch/nn/functional.py:1119:0
    return (%input.118)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.268 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.268)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.268)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.268)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.48 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.48)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.245 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.245)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.245)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.44 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.44)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.240 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.240)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.240)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.240)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.240)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %x.32 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %query_layer.6 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.32, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %x.34 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %key_layer.6 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.34, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %x.36 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %value_layer.6 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.36, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.6, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.11 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.6, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.12 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.11, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.104 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.12, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %input.105 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.104, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.105)
    %context_layer.11 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.11, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.12 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.12, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.12, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self
    %input.106 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.12, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.106)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.244 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.105 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.6 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.105, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.6)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.242 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.242)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.242)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.key # torch/nn/functional.py:1676:0
    %output.80 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.key # torch/nn/functional.py:1678:0
    %x.33 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.80, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.33)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.241 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.241)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.241)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.query # torch/nn/functional.py:1676:0
    %output.79 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.query # torch/nn/functional.py:1678:0
    %x.31 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.79, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.31)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.243 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.243)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.243)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.value # torch/nn/functional.py:1676:0
    %output.81 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.value # torch/nn/functional.py:1678:0
    %x.35 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.81, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.self/__module.mobilebert.encoder.layer.5.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.35)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.247 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.44 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.247)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.247)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.44, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.107 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.107)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.246 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.246)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.246)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.dense # torch/nn/functional.py:1676:0
    %output.82 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.26 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.82, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.attention/__module.mobilebert.encoder.layer.5.attention.output/__module.mobilebert.encoder.layer.5.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.26)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.267 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.267)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.267)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.intermediate/__module.mobilebert.encoder.layer.5.intermediate.dense # torch/nn/functional.py:1676:0
    %output.89 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.intermediate/__module.mobilebert.encoder.layer.5.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.intermediate/__module.mobilebert.encoder.layer.5.intermediate.dense # torch/nn/functional.py:1678:0
    %input.117 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.89, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.intermediate/__module.mobilebert.encoder.layer.5.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.117)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.270 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.48 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.270)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.270)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.48, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.119 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.119)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.271 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.271)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.271)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.271)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.49 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.49)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.269 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.269)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.269)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.dense # torch/nn/functional.py:1676:0
    %output.90 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.dense # torch/nn/functional.py:1678:0
    %layer_output.6 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.90, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.6)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.274 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.49 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.274)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.274)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.49, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.121 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.121)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.272 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.272)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.272)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.91 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.120 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.91, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.120)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.273 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.30 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.output/__module.mobilebert.encoder.layer.5.output.bottleneck/__module.mobilebert.encoder.layer.5.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.30)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.236 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.236)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.236)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.233 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.233)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.233)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.235 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.235)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.235)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.6 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.6)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.234 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.234)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.234)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.77 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.42 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.77, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.input/__module.mobilebert.encoder.layer.5.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.42)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.238 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.238)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.238)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.103 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.103)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.237 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.237)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.237)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.78 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.43 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.78, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.bottleneck/__module.mobilebert.encoder.layer.5.bottleneck.attention/__module.mobilebert.encoder.layer.5.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.43)

FFNLayer._actual_script_module
  graph(%self.248 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.248)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.248)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.249 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.249)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.109 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.109)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.251 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.251)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.251)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.45 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.45)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.250 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.250)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.250)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.intermediate/__module.mobilebert.encoder.layer.5.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.83 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.intermediate/__module.mobilebert.encoder.layer.5.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.intermediate/__module.mobilebert.encoder.layer.5.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.108 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.83, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.intermediate/__module.mobilebert.encoder.layer.5.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.108)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.253 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.45 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.253)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.253)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.45, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.110 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.110)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.252 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.252)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.252)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.84 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.27 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.84, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.0/__module.mobilebert.encoder.layer.5.ffn.0.output/__module.mobilebert.encoder.layer.5.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.27)

FFNLayer._actual_script_module
  graph(%self.254 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.254)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.254)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.255 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.255)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.112 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.112)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.257 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.257)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.257)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.46 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.46)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.256 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.256)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.256)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.intermediate/__module.mobilebert.encoder.layer.5.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.85 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.intermediate/__module.mobilebert.encoder.layer.5.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.intermediate/__module.mobilebert.encoder.layer.5.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.111 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.85, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.intermediate/__module.mobilebert.encoder.layer.5.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.111)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.259 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.46 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.259)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.259)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.46, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.113 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.113)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.258 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.258)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.258)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.86 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.28 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.86, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.1/__module.mobilebert.encoder.layer.5.ffn.1.output/__module.mobilebert.encoder.layer.5.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.28)

FFNLayer._actual_script_module
  graph(%self.260 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.260)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.260)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.261 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.261)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.115 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.115)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.263 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.263)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.263)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.47 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.47)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.262 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.262)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.262)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.intermediate/__module.mobilebert.encoder.layer.5.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.87 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.intermediate/__module.mobilebert.encoder.layer.5.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.intermediate/__module.mobilebert.encoder.layer.5.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.114 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.87, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.intermediate/__module.mobilebert.encoder.layer.5.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.114)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.265 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.47 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.265)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.265)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.47, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.116 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.116)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.264 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.264)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.264)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.88 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.29 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.88, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.5/__module.mobilebert.encoder.layer.5.ffn.2/__module.mobilebert.encoder.layer.5.ffn.2.output/__module.mobilebert.encoder.layer.5.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.29)

MobileBertLayer._actual_script_module
  graph(%self.275 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.275)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.275)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.275)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.275)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.275)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.275)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.275)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.283 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.283)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.283)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.276 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.276)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.276)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.310 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.310)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.137 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.intermediate # torch/nn/functional.py:1119:0
    return (%input.137)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.312 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.312)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.312)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.312)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.56 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.56)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.289 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.289)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.289)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.52 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.52)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.284 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.284)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.284)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.284)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.284)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %x.38 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %query_layer.7 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.38, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %x.40 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %key_layer.7 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.40, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %x.42 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %value_layer.7 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.42, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.7, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.13 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.7, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.14 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.13, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.123 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.14, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %input.124 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.123, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.124)
    %context_layer.13 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.7), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.13, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.14 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.14, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.14, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self
    %input.125 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.14, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.125)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.288 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.124 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.7 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.124, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.7)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.286 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.286)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.286)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.key # torch/nn/functional.py:1676:0
    %output.95 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.key # torch/nn/functional.py:1678:0
    %x.39 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.95, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.39)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.285 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.285)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.285)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.query # torch/nn/functional.py:1676:0
    %output.94 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.query # torch/nn/functional.py:1678:0
    %x.37 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.94, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.37)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.287 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.287)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.287)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.value # torch/nn/functional.py:1676:0
    %output.96 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.value # torch/nn/functional.py:1678:0
    %x.41 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.96, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.self/__module.mobilebert.encoder.layer.6.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.41)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.291 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.52 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.291)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.291)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.52, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.126 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.126)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.290 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.290)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.290)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.dense # torch/nn/functional.py:1676:0
    %output.97 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.31 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.97, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.attention/__module.mobilebert.encoder.layer.6.attention.output/__module.mobilebert.encoder.layer.6.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.31)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.311 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.311)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.311)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.intermediate/__module.mobilebert.encoder.layer.6.intermediate.dense # torch/nn/functional.py:1676:0
    %output.104 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.intermediate/__module.mobilebert.encoder.layer.6.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.intermediate/__module.mobilebert.encoder.layer.6.intermediate.dense # torch/nn/functional.py:1678:0
    %input.136 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.104, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.intermediate/__module.mobilebert.encoder.layer.6.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.136)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.314 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.56 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.314)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.314)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.56, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.138 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.138)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.315 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.315)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.315)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.315)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.57 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.57)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.313 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.313)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.313)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.dense # torch/nn/functional.py:1676:0
    %output.105 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.dense # torch/nn/functional.py:1678:0
    %layer_output.7 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.105, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.7)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.318 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.57 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.318)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.318)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.57, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.140 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.140)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.316 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.316)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.316)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.106 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.139 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.106, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.139)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.317 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.35 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.output/__module.mobilebert.encoder.layer.6.output.bottleneck/__module.mobilebert.encoder.layer.6.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.35)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.280 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.280)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.280)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.277 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.277)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.277)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.279 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.279)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.279)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.7 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.7)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.278 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.278)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.278)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.92 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.50 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.92, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.input/__module.mobilebert.encoder.layer.6.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.50)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.282 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.282)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.282)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.122 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.122)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.281 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.281)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.281)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.93 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.51 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.93, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.bottleneck/__module.mobilebert.encoder.layer.6.bottleneck.attention/__module.mobilebert.encoder.layer.6.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.51)

FFNLayer._actual_script_module
  graph(%self.292 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.292)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.292)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.293 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.293)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.128 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.128)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.295 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.295)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.295)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.53 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.53)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.294 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.294)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.294)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.intermediate/__module.mobilebert.encoder.layer.6.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.98 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.intermediate/__module.mobilebert.encoder.layer.6.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.intermediate/__module.mobilebert.encoder.layer.6.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.127 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.98, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.intermediate/__module.mobilebert.encoder.layer.6.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.127)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.297 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.53 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.297)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.297)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.53, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.129 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.129)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.296 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.296)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.296)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.99 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.32 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.99, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.0/__module.mobilebert.encoder.layer.6.ffn.0.output/__module.mobilebert.encoder.layer.6.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.32)

FFNLayer._actual_script_module
  graph(%self.298 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.298)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.298)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.299 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.299)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.131 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.131)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.301 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.301)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.301)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.54 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.54)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.300 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.300)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.300)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.intermediate/__module.mobilebert.encoder.layer.6.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.100 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.intermediate/__module.mobilebert.encoder.layer.6.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.intermediate/__module.mobilebert.encoder.layer.6.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.130 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.100, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.intermediate/__module.mobilebert.encoder.layer.6.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.130)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.303 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.54 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.303)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.303)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.54, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.132 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.132)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.302 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.302)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.302)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.101 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.33 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.101, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.1/__module.mobilebert.encoder.layer.6.ffn.1.output/__module.mobilebert.encoder.layer.6.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.33)

FFNLayer._actual_script_module
  graph(%self.304 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.304)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.304)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.305 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.305)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.134 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.134)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.307 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.307)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.307)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.55 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.55)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.306 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.306)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.306)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.intermediate/__module.mobilebert.encoder.layer.6.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.102 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.intermediate/__module.mobilebert.encoder.layer.6.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.intermediate/__module.mobilebert.encoder.layer.6.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.133 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.102, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.intermediate/__module.mobilebert.encoder.layer.6.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.133)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.309 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.55 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.309)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.309)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.55, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.135 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.135)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.308 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.308)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.308)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.103 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.34 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.103, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.6/__module.mobilebert.encoder.layer.6.ffn.2/__module.mobilebert.encoder.layer.6.ffn.2.output/__module.mobilebert.encoder.layer.6.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.34)

MobileBertLayer._actual_script_module
  graph(%self.319 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.319)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.319)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.319)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.319)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.319)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.319)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.319)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.327 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.327)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.327)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.320 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.320)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.320)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.354 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.354)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.156 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.intermediate # torch/nn/functional.py:1119:0
    return (%input.156)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.356 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.356)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.356)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.356)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.64 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.64)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.333 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.333)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.333)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.60 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.60)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.328 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.328)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.328)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.328)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.328)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %x.44 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %query_layer.8 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.44, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %x.46 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %key_layer.8 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.46, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %x.48 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %value_layer.8 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.48, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.8, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.15 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.8, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.16 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.15, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.142 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.16, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %input.143 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.142, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.143)
    %context_layer.15 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.15, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.16 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.16, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.16, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self
    %input.144 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.16, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.144)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.332 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.143 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.8 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.143, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.8)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.330 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.330)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.330)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.key # torch/nn/functional.py:1676:0
    %output.110 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.key # torch/nn/functional.py:1678:0
    %x.45 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.110, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.45)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.329 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.329)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.329)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.query # torch/nn/functional.py:1676:0
    %output.109 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.query # torch/nn/functional.py:1678:0
    %x.43 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.109, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.43)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.331 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.331)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.331)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.value # torch/nn/functional.py:1676:0
    %output.111 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.value # torch/nn/functional.py:1678:0
    %x.47 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.111, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.self/__module.mobilebert.encoder.layer.7.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.47)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.335 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.60 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.335)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.335)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.60, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.145 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.145)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.334 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.334)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.334)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.dense # torch/nn/functional.py:1676:0
    %output.112 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.36 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.112, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.attention/__module.mobilebert.encoder.layer.7.attention.output/__module.mobilebert.encoder.layer.7.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.36)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.355 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.355)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.355)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.intermediate/__module.mobilebert.encoder.layer.7.intermediate.dense # torch/nn/functional.py:1676:0
    %output.119 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.intermediate/__module.mobilebert.encoder.layer.7.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.intermediate/__module.mobilebert.encoder.layer.7.intermediate.dense # torch/nn/functional.py:1678:0
    %input.155 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.119, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.intermediate/__module.mobilebert.encoder.layer.7.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.155)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.358 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.64 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.358)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.358)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.64, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.157 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.157)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.359 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.359)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.359)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.359)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.65 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.65)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.357 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.357)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.357)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.dense # torch/nn/functional.py:1676:0
    %output.120 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.dense # torch/nn/functional.py:1678:0
    %layer_output.8 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.120, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.8)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.362 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.65 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.362)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.362)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.65, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.159 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.159)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.360 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.360)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.360)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.121 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.158 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.121, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.158)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.361 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.40 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.output/__module.mobilebert.encoder.layer.7.output.bottleneck/__module.mobilebert.encoder.layer.7.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.40)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.324 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.324)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.324)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.321 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.321)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.321)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.323 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.323)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.323)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.8 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.8)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.322 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.322)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.322)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.107 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.58 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.107, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.input/__module.mobilebert.encoder.layer.7.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.58)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.326 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.326)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.326)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.141 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.141)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.325 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.325)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.325)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.108 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.59 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.108, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.bottleneck/__module.mobilebert.encoder.layer.7.bottleneck.attention/__module.mobilebert.encoder.layer.7.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.59)

FFNLayer._actual_script_module
  graph(%self.336 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.336)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.336)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.337 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.337)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.147 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.147)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.339 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.339)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.339)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.61 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.61)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.338 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.338)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.338)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.intermediate/__module.mobilebert.encoder.layer.7.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.113 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.intermediate/__module.mobilebert.encoder.layer.7.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.intermediate/__module.mobilebert.encoder.layer.7.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.146 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.113, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.intermediate/__module.mobilebert.encoder.layer.7.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.146)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.341 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.61 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.341)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.341)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.61, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.148 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.148)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.340 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.340)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.340)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.114 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.37 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.114, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.0/__module.mobilebert.encoder.layer.7.ffn.0.output/__module.mobilebert.encoder.layer.7.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.37)

FFNLayer._actual_script_module
  graph(%self.342 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.342)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.342)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.343 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.343)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.150 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.150)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.345 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.345)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.345)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.62 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.62)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.344 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.344)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.344)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.intermediate/__module.mobilebert.encoder.layer.7.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.115 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.intermediate/__module.mobilebert.encoder.layer.7.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.intermediate/__module.mobilebert.encoder.layer.7.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.149 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.115, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.intermediate/__module.mobilebert.encoder.layer.7.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.149)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.347 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.62 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.347)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.347)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.62, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.151 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.151)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.346 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.346)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.346)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.116 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.38 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.116, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.1/__module.mobilebert.encoder.layer.7.ffn.1.output/__module.mobilebert.encoder.layer.7.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.38)

FFNLayer._actual_script_module
  graph(%self.348 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.348)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.348)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.349 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.349)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.153 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.153)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.351 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.351)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.351)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.63 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.63)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.350 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.350)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.350)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.intermediate/__module.mobilebert.encoder.layer.7.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.117 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.intermediate/__module.mobilebert.encoder.layer.7.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.intermediate/__module.mobilebert.encoder.layer.7.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.152 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.117, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.intermediate/__module.mobilebert.encoder.layer.7.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.152)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.353 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.63 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.353)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.353)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.63, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.154 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.154)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.352 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.352)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.352)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.118 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.39 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.118, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.7/__module.mobilebert.encoder.layer.7.ffn.2/__module.mobilebert.encoder.layer.7.ffn.2.output/__module.mobilebert.encoder.layer.7.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.39)

MobileBertLayer._actual_script_module
  graph(%self.363 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.363)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.363)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.363)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.363)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.363)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.363)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.363)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.371 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.371)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.371)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.364 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.364)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.364)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.398 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.398)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.175 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.intermediate # torch/nn/functional.py:1119:0
    return (%input.175)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.400 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.400)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.400)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.400)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.72 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.72)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.377 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.377)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.377)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.68 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.68)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.372 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.372)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.372)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.372)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.372)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %x.50 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %query_layer.9 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.50, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %x.52 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %key_layer.9 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.52, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %x.54 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %value_layer.9 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.54, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.9, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.17 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.9, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.18 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.17, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.161 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.18, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %input.162 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.161, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.162)
    %context_layer.17 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.9), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.17, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.18 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.18, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.18, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self
    %input.163 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.18, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.163)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.376 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.162 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.9 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.162, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.9)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.374 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.374)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.374)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.key # torch/nn/functional.py:1676:0
    %output.125 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.key # torch/nn/functional.py:1678:0
    %x.51 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.125, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.51)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.373 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.373)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.373)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.query # torch/nn/functional.py:1676:0
    %output.124 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.query # torch/nn/functional.py:1678:0
    %x.49 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.124, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.49)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.375 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.375)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.375)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.value # torch/nn/functional.py:1676:0
    %output.126 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.value # torch/nn/functional.py:1678:0
    %x.53 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.126, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.self/__module.mobilebert.encoder.layer.8.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.53)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.379 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.68 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.379)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.379)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.68, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.164 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.164)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.378 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.378)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.378)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.dense # torch/nn/functional.py:1676:0
    %output.127 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.41 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.127, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.attention/__module.mobilebert.encoder.layer.8.attention.output/__module.mobilebert.encoder.layer.8.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.41)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.399 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.399)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.399)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.intermediate/__module.mobilebert.encoder.layer.8.intermediate.dense # torch/nn/functional.py:1676:0
    %output.134 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.intermediate/__module.mobilebert.encoder.layer.8.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.intermediate/__module.mobilebert.encoder.layer.8.intermediate.dense # torch/nn/functional.py:1678:0
    %input.174 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.134, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.intermediate/__module.mobilebert.encoder.layer.8.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.174)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.402 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.72 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.402)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.402)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.72, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.176 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.176)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.403 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.403)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.403)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.403)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.73 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.73)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.401 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.401)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.401)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.dense # torch/nn/functional.py:1676:0
    %output.135 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.dense # torch/nn/functional.py:1678:0
    %layer_output.9 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.135, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.9)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.406 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.73 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.406)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.406)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.73, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.178 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.178)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.404 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.404)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.404)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.136 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.177 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.136, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.177)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.405 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.45 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.output/__module.mobilebert.encoder.layer.8.output.bottleneck/__module.mobilebert.encoder.layer.8.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.45)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.368 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.368)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.368)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.365 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.365)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.365)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.367 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.367)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.367)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.9 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.9)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.366 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.366)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.366)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.122 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.66 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.122, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.input/__module.mobilebert.encoder.layer.8.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.66)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.370 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.370)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.370)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.160 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.160)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.369 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.369)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.369)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.123 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.67 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.123, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.bottleneck/__module.mobilebert.encoder.layer.8.bottleneck.attention/__module.mobilebert.encoder.layer.8.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.67)

FFNLayer._actual_script_module
  graph(%self.380 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.380)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.380)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.381 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.381)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.166 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.166)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.383 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.383)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.383)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.69 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.69)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.382 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.382)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.382)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.intermediate/__module.mobilebert.encoder.layer.8.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.128 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.intermediate/__module.mobilebert.encoder.layer.8.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.intermediate/__module.mobilebert.encoder.layer.8.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.165 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.128, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.intermediate/__module.mobilebert.encoder.layer.8.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.165)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.385 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.69 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.385)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.385)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.69, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.167 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.167)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.384 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.384)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.384)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.129 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.42 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.129, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.0/__module.mobilebert.encoder.layer.8.ffn.0.output/__module.mobilebert.encoder.layer.8.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.42)

FFNLayer._actual_script_module
  graph(%self.386 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.386)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.386)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.387 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.387)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.169 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.169)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.389 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.389)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.389)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.70 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.70)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.388 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.388)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.388)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.intermediate/__module.mobilebert.encoder.layer.8.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.130 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.intermediate/__module.mobilebert.encoder.layer.8.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.intermediate/__module.mobilebert.encoder.layer.8.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.168 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.130, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.intermediate/__module.mobilebert.encoder.layer.8.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.168)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.391 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.70 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.391)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.391)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.70, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.170 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.170)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.390 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.390)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.390)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.131 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.43 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.131, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.1/__module.mobilebert.encoder.layer.8.ffn.1.output/__module.mobilebert.encoder.layer.8.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.43)

FFNLayer._actual_script_module
  graph(%self.392 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.392)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.392)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.393 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.393)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.172 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.172)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.395 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.395)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.395)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.71 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.71)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.394 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.394)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.394)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.intermediate/__module.mobilebert.encoder.layer.8.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.132 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.intermediate/__module.mobilebert.encoder.layer.8.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.intermediate/__module.mobilebert.encoder.layer.8.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.171 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.132, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.intermediate/__module.mobilebert.encoder.layer.8.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.171)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.397 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.71 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.397)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.397)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.71, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.173 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.173)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.396 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.396)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.396)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.133 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.44 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.133, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.8/__module.mobilebert.encoder.layer.8.ffn.2/__module.mobilebert.encoder.layer.8.ffn.2.output/__module.mobilebert.encoder.layer.8.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.44)

MobileBertLayer._actual_script_module
  graph(%self.407 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.407)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.407)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.407)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.407)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.407)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.407)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.407)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.415 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.415)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.415)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.408 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.408)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.408)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.442 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.442)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.194 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.intermediate # torch/nn/functional.py:1119:0
    return (%input.194)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.444 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.444)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.444)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.444)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.80 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.80)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.421 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.421)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.421)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.76 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.76)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.416 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.416)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.416)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.416)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.416)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %x.56 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %query_layer.10 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.56, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %x.58 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %key_layer.10 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.58, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %x.60 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %value_layer.10 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.60, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.10, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.19 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.10, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.20 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.19, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.180 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.20, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %input.181 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.180, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.181)
    %context_layer.19 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.10), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.19, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.20 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.20, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.20, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self
    %input.182 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.20, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.182)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.420 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.181 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.10 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.181, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.10)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.418 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.418)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.418)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.key # torch/nn/functional.py:1676:0
    %output.140 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.key # torch/nn/functional.py:1678:0
    %x.57 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.140, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.57)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.417 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.417)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.417)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.query # torch/nn/functional.py:1676:0
    %output.139 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.query # torch/nn/functional.py:1678:0
    %x.55 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.139, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.55)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.419 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.419)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.419)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.value # torch/nn/functional.py:1676:0
    %output.141 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.value # torch/nn/functional.py:1678:0
    %x.59 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.141, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.self/__module.mobilebert.encoder.layer.9.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.59)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.423 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.76 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.423)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.423)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.76, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.183 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.183)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.422 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.422)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.422)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.dense # torch/nn/functional.py:1676:0
    %output.142 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.46 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.142, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.attention/__module.mobilebert.encoder.layer.9.attention.output/__module.mobilebert.encoder.layer.9.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.46)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.443 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.443)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.443)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.intermediate/__module.mobilebert.encoder.layer.9.intermediate.dense # torch/nn/functional.py:1676:0
    %output.149 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.intermediate/__module.mobilebert.encoder.layer.9.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.intermediate/__module.mobilebert.encoder.layer.9.intermediate.dense # torch/nn/functional.py:1678:0
    %input.193 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.149, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.intermediate/__module.mobilebert.encoder.layer.9.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.193)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.446 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.80 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.446)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.446)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.80, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.195 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.195)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.447 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.447)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.447)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.447)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.81 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.81)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.445 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.445)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.445)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.dense # torch/nn/functional.py:1676:0
    %output.150 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.dense # torch/nn/functional.py:1678:0
    %layer_output.10 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.150, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.10)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.450 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.81 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.450)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.450)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.81, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.197 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.197)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.448 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.448)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.448)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.151 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.196 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.151, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.196)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.449 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.50 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.output/__module.mobilebert.encoder.layer.9.output.bottleneck/__module.mobilebert.encoder.layer.9.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.50)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.412 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.412)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.412)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.409 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.409)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.409)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.411 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.411)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.411)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.10 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.10)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.410 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.410)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.410)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.137 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.74 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.137, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.input/__module.mobilebert.encoder.layer.9.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.74)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.414 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.414)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.414)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.179 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.179)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.413 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.413)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.413)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.138 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.75 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.138, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.bottleneck/__module.mobilebert.encoder.layer.9.bottleneck.attention/__module.mobilebert.encoder.layer.9.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.75)

FFNLayer._actual_script_module
  graph(%self.424 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.424)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.424)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.425 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.425)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.185 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.185)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.427 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.427)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.427)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.77 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.77)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.426 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.426)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.426)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.intermediate/__module.mobilebert.encoder.layer.9.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.143 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.intermediate/__module.mobilebert.encoder.layer.9.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.intermediate/__module.mobilebert.encoder.layer.9.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.184 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.143, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.intermediate/__module.mobilebert.encoder.layer.9.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.184)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.429 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.77 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.429)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.429)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.77, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.186 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.186)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.428 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.428)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.428)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.144 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.47 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.144, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.0/__module.mobilebert.encoder.layer.9.ffn.0.output/__module.mobilebert.encoder.layer.9.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.47)

FFNLayer._actual_script_module
  graph(%self.430 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.430)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.430)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.431 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.431)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.188 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.188)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.433 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.433)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.433)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.78 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.78)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.432 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.432)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.432)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.intermediate/__module.mobilebert.encoder.layer.9.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.145 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.intermediate/__module.mobilebert.encoder.layer.9.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.intermediate/__module.mobilebert.encoder.layer.9.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.187 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.145, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.intermediate/__module.mobilebert.encoder.layer.9.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.187)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.435 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.78 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.435)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.435)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.78, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.189 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.189)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.434 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.434)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.434)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.146 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.48 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.146, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.1/__module.mobilebert.encoder.layer.9.ffn.1.output/__module.mobilebert.encoder.layer.9.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.48)

FFNLayer._actual_script_module
  graph(%self.436 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.436)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.436)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.437 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.437)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.191 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.191)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.439 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.439)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.439)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.79 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.79)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.438 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.438)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.438)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.intermediate/__module.mobilebert.encoder.layer.9.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.147 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.intermediate/__module.mobilebert.encoder.layer.9.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.intermediate/__module.mobilebert.encoder.layer.9.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.190 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.147, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.intermediate/__module.mobilebert.encoder.layer.9.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.190)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.441 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.79 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.441)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.441)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.79, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.192 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.192)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.440 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.440)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.440)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.148 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.49 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.148, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.9/__module.mobilebert.encoder.layer.9.ffn.2/__module.mobilebert.encoder.layer.9.ffn.2.output/__module.mobilebert.encoder.layer.9.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.49)

MobileBertLayer._actual_script_module
  graph(%self.451 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.451)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.451)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.451)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.451)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.451)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.451)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.451)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.459 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.459)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.459)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.452 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.452)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.452)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.486 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.486)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.213 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.intermediate # torch/nn/functional.py:1119:0
    return (%input.213)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.488 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.488)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.488)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.488)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.88 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.88)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.465 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.465)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.465)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.84 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.84)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.460 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.460)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.460)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.460)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.460)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %x.62 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %query_layer.11 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.62, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %x.64 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %key_layer.11 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.64, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %x.66 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %value_layer.11 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.66, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.11, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.21 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.11, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.22 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.21, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.199 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.22, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %input.200 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.199, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.200)
    %context_layer.21 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.21, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.22 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.22, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.22, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self
    %input.201 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.22, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.201)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.464 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.200 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.11 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.200, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.11)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.462 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.462)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.462)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.key # torch/nn/functional.py:1676:0
    %output.155 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.key # torch/nn/functional.py:1678:0
    %x.63 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.155, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.63)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.461 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.461)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.461)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.query # torch/nn/functional.py:1676:0
    %output.154 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.query # torch/nn/functional.py:1678:0
    %x.61 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.154, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.61)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.463 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.463)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.463)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.value # torch/nn/functional.py:1676:0
    %output.156 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.value # torch/nn/functional.py:1678:0
    %x.65 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.156, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.self/__module.mobilebert.encoder.layer.10.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.65)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.467 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.84 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.467)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.467)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.84, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.202 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.202)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.466 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.466)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.466)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.dense # torch/nn/functional.py:1676:0
    %output.157 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.51 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.157, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.attention/__module.mobilebert.encoder.layer.10.attention.output/__module.mobilebert.encoder.layer.10.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.51)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.487 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.487)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.487)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.intermediate/__module.mobilebert.encoder.layer.10.intermediate.dense # torch/nn/functional.py:1676:0
    %output.164 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.intermediate/__module.mobilebert.encoder.layer.10.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.intermediate/__module.mobilebert.encoder.layer.10.intermediate.dense # torch/nn/functional.py:1678:0
    %input.212 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.164, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.intermediate/__module.mobilebert.encoder.layer.10.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.212)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.490 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.88 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.490)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.490)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.88, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.214 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.214)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.491 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.491)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.491)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.491)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.89 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.89)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.489 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.489)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.489)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.dense # torch/nn/functional.py:1676:0
    %output.165 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.dense # torch/nn/functional.py:1678:0
    %layer_output.11 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.165, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.11)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.494 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.89 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.494)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.494)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.89, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.216 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.216)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.492 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.492)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.492)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.166 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.215 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.166, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.215)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.493 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.55 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.output/__module.mobilebert.encoder.layer.10.output.bottleneck/__module.mobilebert.encoder.layer.10.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.55)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.456 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.456)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.456)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.453 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.453)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.453)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.455 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.455)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.455)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.11 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.11)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.454 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.454)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.454)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.152 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.82 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.152, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.input/__module.mobilebert.encoder.layer.10.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.82)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.458 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.458)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.458)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.198 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.198)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.457 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.457)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.457)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.153 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.83 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.153, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.bottleneck/__module.mobilebert.encoder.layer.10.bottleneck.attention/__module.mobilebert.encoder.layer.10.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.83)

FFNLayer._actual_script_module
  graph(%self.468 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.468)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.468)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.469 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.469)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.204 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.204)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.471 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.471)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.471)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.85 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.85)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.470 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.470)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.470)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.intermediate/__module.mobilebert.encoder.layer.10.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.158 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.intermediate/__module.mobilebert.encoder.layer.10.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.intermediate/__module.mobilebert.encoder.layer.10.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.203 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.158, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.intermediate/__module.mobilebert.encoder.layer.10.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.203)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.473 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.85 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.473)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.473)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.85, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.205 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.205)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.472 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.472)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.472)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.159 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.52 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.159, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.0/__module.mobilebert.encoder.layer.10.ffn.0.output/__module.mobilebert.encoder.layer.10.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.52)

FFNLayer._actual_script_module
  graph(%self.474 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.474)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.474)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.475 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.475)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.207 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.207)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.477 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.477)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.477)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.86 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.86)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.476 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.476)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.476)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.intermediate/__module.mobilebert.encoder.layer.10.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.160 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.intermediate/__module.mobilebert.encoder.layer.10.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.intermediate/__module.mobilebert.encoder.layer.10.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.206 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.160, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.intermediate/__module.mobilebert.encoder.layer.10.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.206)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.479 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.86 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.479)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.479)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.86, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.208 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.208)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.478 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.478)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.478)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.161 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.53 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.161, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.1/__module.mobilebert.encoder.layer.10.ffn.1.output/__module.mobilebert.encoder.layer.10.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.53)

FFNLayer._actual_script_module
  graph(%self.480 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.480)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.480)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.481 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.481)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.210 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.210)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.483 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.483)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.483)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.87 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.87)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.482 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.482)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.482)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.intermediate/__module.mobilebert.encoder.layer.10.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.162 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.intermediate/__module.mobilebert.encoder.layer.10.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.intermediate/__module.mobilebert.encoder.layer.10.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.209 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.162, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.intermediate/__module.mobilebert.encoder.layer.10.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.209)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.485 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.87 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.485)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.485)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.87, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.211 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.211)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.484 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.484)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.484)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.163 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.54 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.163, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.10/__module.mobilebert.encoder.layer.10.ffn.2/__module.mobilebert.encoder.layer.10.ffn.2.output/__module.mobilebert.encoder.layer.10.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.54)

MobileBertLayer._actual_script_module
  graph(%self.495 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.495)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.495)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.495)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.495)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.495)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.495)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.495)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.503 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.503)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.503)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.496 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.496)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.496)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.530 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.530)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.232 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.intermediate # torch/nn/functional.py:1119:0
    return (%input.232)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.532 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.532)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.532)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.532)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.96 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.96)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.509 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.509)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.509)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.92 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.92)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.504 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.504)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.504)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.504)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.504)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %x.68 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %query_layer.12 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.68, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %x.70 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %key_layer.12 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.70, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %x.72 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %value_layer.12 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.72, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.12, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.23 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.12, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.24 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.23, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.218 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.24, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %input.219 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.218, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.219)
    %context_layer.23 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.23, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.24 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.24, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.24, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self
    %input.220 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.24, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.220)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.508 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.219 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.12 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.219, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.12)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.506 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.506)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.506)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.key # torch/nn/functional.py:1676:0
    %output.170 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.key # torch/nn/functional.py:1678:0
    %x.69 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.170, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.69)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.505 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.505)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.505)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.query # torch/nn/functional.py:1676:0
    %output.169 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.query # torch/nn/functional.py:1678:0
    %x.67 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.169, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.67)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.507 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.507)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.507)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.value # torch/nn/functional.py:1676:0
    %output.171 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.value # torch/nn/functional.py:1678:0
    %x.71 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.171, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.self/__module.mobilebert.encoder.layer.11.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.71)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.511 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.92 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.511)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.511)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.92, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.221 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.221)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.510 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.510)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.510)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.dense # torch/nn/functional.py:1676:0
    %output.172 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.56 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.172, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.attention/__module.mobilebert.encoder.layer.11.attention.output/__module.mobilebert.encoder.layer.11.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.56)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.531 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.531)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.531)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.intermediate/__module.mobilebert.encoder.layer.11.intermediate.dense # torch/nn/functional.py:1676:0
    %output.179 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.intermediate/__module.mobilebert.encoder.layer.11.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.intermediate/__module.mobilebert.encoder.layer.11.intermediate.dense # torch/nn/functional.py:1678:0
    %input.231 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.179, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.intermediate/__module.mobilebert.encoder.layer.11.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.231)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.534 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.96 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.534)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.534)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.96, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.233 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.233)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.535 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.535)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.535)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.535)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.97 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.97)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.533 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.533)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.533)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.dense # torch/nn/functional.py:1676:0
    %output.180 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.dense # torch/nn/functional.py:1678:0
    %layer_output.12 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.180, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.12)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.538 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.97 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.538)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.538)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.97, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.235 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.235)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.536 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.536)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.536)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.181 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.234 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.181, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.234)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.537 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.60 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.output/__module.mobilebert.encoder.layer.11.output.bottleneck/__module.mobilebert.encoder.layer.11.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.60)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.500 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.500)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.500)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.497 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.497)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.497)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.499 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.499)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.499)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.12 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.12)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.498 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.498)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.498)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.167 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.90 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.167, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.input/__module.mobilebert.encoder.layer.11.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.90)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.502 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.502)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.502)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.217 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.217)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.501 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.501)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.501)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.168 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.91 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.168, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.bottleneck/__module.mobilebert.encoder.layer.11.bottleneck.attention/__module.mobilebert.encoder.layer.11.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.91)

FFNLayer._actual_script_module
  graph(%self.512 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.512)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.512)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.513 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.513)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.223 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.223)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.515 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.515)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.515)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.93 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.93)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.514 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.514)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.514)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.intermediate/__module.mobilebert.encoder.layer.11.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.173 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.intermediate/__module.mobilebert.encoder.layer.11.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.intermediate/__module.mobilebert.encoder.layer.11.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.222 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.173, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.intermediate/__module.mobilebert.encoder.layer.11.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.222)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.517 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.93 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.517)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.517)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.93, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.224 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.224)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.516 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.516)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.516)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.174 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.57 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.174, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.0/__module.mobilebert.encoder.layer.11.ffn.0.output/__module.mobilebert.encoder.layer.11.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.57)

FFNLayer._actual_script_module
  graph(%self.518 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.518)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.518)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.519 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.519)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.226 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.226)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.521 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.521)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.521)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.94 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.94)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.520 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.520)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.520)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.intermediate/__module.mobilebert.encoder.layer.11.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.175 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.intermediate/__module.mobilebert.encoder.layer.11.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.intermediate/__module.mobilebert.encoder.layer.11.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.225 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.175, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.intermediate/__module.mobilebert.encoder.layer.11.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.225)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.523 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.94 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.523)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.523)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.94, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.227 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.227)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.522 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.522)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.522)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.176 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.58 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.176, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.1/__module.mobilebert.encoder.layer.11.ffn.1.output/__module.mobilebert.encoder.layer.11.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.58)

FFNLayer._actual_script_module
  graph(%self.524 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.524)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.524)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.525 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.525)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.229 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.229)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.527 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.527)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.527)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.95 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.95)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.526 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.526)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.526)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.intermediate/__module.mobilebert.encoder.layer.11.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.177 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.intermediate/__module.mobilebert.encoder.layer.11.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.intermediate/__module.mobilebert.encoder.layer.11.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.228 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.177, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.intermediate/__module.mobilebert.encoder.layer.11.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.228)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.529 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.95 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.529)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.529)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.95, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.230 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.230)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.528 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.528)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.528)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.178 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.59 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.178, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.11/__module.mobilebert.encoder.layer.11.ffn.2/__module.mobilebert.encoder.layer.11.ffn.2.output/__module.mobilebert.encoder.layer.11.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.59)

MobileBertLayer._actual_script_module
  graph(%self.539 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.539)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.539)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.539)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.539)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.539)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.539)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.539)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.547 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.547)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.547)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.540 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.540)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.540)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.574 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.574)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.251 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.intermediate # torch/nn/functional.py:1119:0
    return (%input.251)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.576 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.576)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.576)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.576)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.104 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.104)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.553 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.553)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.553)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.100 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.100)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.548 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.548)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.548)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.548)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.548)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %x.74 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %query_layer.13 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.74, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %x.76 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %key_layer.13 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.76, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %x.78 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %value_layer.13 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.78, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.13, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.25 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.13, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.26 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.25, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.237 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.26, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %input.238 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.237, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.238)
    %context_layer.25 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.25, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.26 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.26, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.26, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self
    %input.239 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.26, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.239)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.552 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.238 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.13 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.238, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.13)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.550 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.550)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.550)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.key # torch/nn/functional.py:1676:0
    %output.185 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.key # torch/nn/functional.py:1678:0
    %x.75 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.185, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.75)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.549 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.549)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.549)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.query # torch/nn/functional.py:1676:0
    %output.184 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.query # torch/nn/functional.py:1678:0
    %x.73 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.184, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.73)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.551 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.551)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.551)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.value # torch/nn/functional.py:1676:0
    %output.186 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.value # torch/nn/functional.py:1678:0
    %x.77 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.186, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.self/__module.mobilebert.encoder.layer.12.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.77)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.555 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.100 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.555)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.555)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.100, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.240 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.240)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.554 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.554)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.554)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.dense # torch/nn/functional.py:1676:0
    %output.187 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.61 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.187, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.attention/__module.mobilebert.encoder.layer.12.attention.output/__module.mobilebert.encoder.layer.12.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.61)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.575 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.575)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.575)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.intermediate/__module.mobilebert.encoder.layer.12.intermediate.dense # torch/nn/functional.py:1676:0
    %output.194 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.intermediate/__module.mobilebert.encoder.layer.12.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.intermediate/__module.mobilebert.encoder.layer.12.intermediate.dense # torch/nn/functional.py:1678:0
    %input.250 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.194, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.intermediate/__module.mobilebert.encoder.layer.12.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.250)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.578 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.104 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.578)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.578)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.104, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.252 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.252)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.579 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.579)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.579)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.579)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.105 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.105)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.577 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.577)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.577)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.dense # torch/nn/functional.py:1676:0
    %output.195 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.dense # torch/nn/functional.py:1678:0
    %layer_output.13 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.195, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.13)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.582 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.105 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.582)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.582)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.105, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.254 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.254)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.580 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.580)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.580)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.196 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.253 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.196, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.253)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.581 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.65 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.output/__module.mobilebert.encoder.layer.12.output.bottleneck/__module.mobilebert.encoder.layer.12.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.65)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.544 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.544)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.544)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.541 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.541)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.541)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.543 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.543)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.543)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.13 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.13)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.542 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.542)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.542)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.182 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.98 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.182, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.input/__module.mobilebert.encoder.layer.12.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.98)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.546 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.546)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.546)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.236 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.236)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.545 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.545)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.545)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.183 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.99 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.183, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.bottleneck/__module.mobilebert.encoder.layer.12.bottleneck.attention/__module.mobilebert.encoder.layer.12.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.99)

FFNLayer._actual_script_module
  graph(%self.556 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.556)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.556)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.557 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.557)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.242 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.242)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.559 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.559)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.559)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.101 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.101)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.558 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.558)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.558)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.intermediate/__module.mobilebert.encoder.layer.12.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.188 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.intermediate/__module.mobilebert.encoder.layer.12.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.intermediate/__module.mobilebert.encoder.layer.12.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.241 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.188, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.intermediate/__module.mobilebert.encoder.layer.12.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.241)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.561 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.101 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.561)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.561)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.101, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.243 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.243)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.560 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.560)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.560)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.189 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.62 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.189, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.0/__module.mobilebert.encoder.layer.12.ffn.0.output/__module.mobilebert.encoder.layer.12.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.62)

FFNLayer._actual_script_module
  graph(%self.562 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.562)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.562)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.563 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.563)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.245 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.245)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.565 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.565)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.565)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.102 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.102)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.564 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.564)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.564)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.intermediate/__module.mobilebert.encoder.layer.12.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.190 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.intermediate/__module.mobilebert.encoder.layer.12.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.intermediate/__module.mobilebert.encoder.layer.12.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.244 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.190, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.intermediate/__module.mobilebert.encoder.layer.12.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.244)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.567 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.102 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.567)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.567)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.102, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.246 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.246)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.566 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.566)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.566)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.191 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.63 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.191, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.1/__module.mobilebert.encoder.layer.12.ffn.1.output/__module.mobilebert.encoder.layer.12.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.63)

FFNLayer._actual_script_module
  graph(%self.568 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.568)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.568)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.569 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.569)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.248 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.248)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.571 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.571)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.571)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.103 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.103)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.570 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.570)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.570)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.intermediate/__module.mobilebert.encoder.layer.12.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.192 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.intermediate/__module.mobilebert.encoder.layer.12.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.intermediate/__module.mobilebert.encoder.layer.12.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.247 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.192, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.intermediate/__module.mobilebert.encoder.layer.12.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.247)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.573 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.103 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.573)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.573)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.103, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.249 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.249)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.572 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.572)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.572)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.193 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.64 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.193, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.12/__module.mobilebert.encoder.layer.12.ffn.2/__module.mobilebert.encoder.layer.12.ffn.2.output/__module.mobilebert.encoder.layer.12.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.64)

MobileBertLayer._actual_script_module
  graph(%self.583 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.583)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.583)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.583)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.583)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.583)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.583)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.583)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.591 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.591)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.591)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.584 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.584)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.584)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.618 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.618)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.270 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.intermediate # torch/nn/functional.py:1119:0
    return (%input.270)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.620 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.620)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.620)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.620)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.112 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.112)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.597 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.597)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.597)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.108 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.108)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.592 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.592)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.592)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.592)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.592)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %x.80 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %query_layer.14 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.80, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %x.82 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %key_layer.14 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.82, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %x.84 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %value_layer.14 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.84, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.14, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.27 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.14, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.28 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.27, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.256 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.28, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %input.257 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.256, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.257)
    %context_layer.27 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.14), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.27, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.28 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.28, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.28, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self
    %input.258 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.28, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.258)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.596 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.257 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.14 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.257, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.14)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.594 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.594)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.594)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.key # torch/nn/functional.py:1676:0
    %output.200 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.key # torch/nn/functional.py:1678:0
    %x.81 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.200, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.81)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.593 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.593)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.593)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.query # torch/nn/functional.py:1676:0
    %output.199 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.query # torch/nn/functional.py:1678:0
    %x.79 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.199, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.79)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.595 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.595)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.595)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.value # torch/nn/functional.py:1676:0
    %output.201 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.value # torch/nn/functional.py:1678:0
    %x.83 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.201, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.self/__module.mobilebert.encoder.layer.13.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.83)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.599 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.108 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.599)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.599)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.108, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.259 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.259)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.598 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.598)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.598)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.dense # torch/nn/functional.py:1676:0
    %output.202 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.66 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.202, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.attention/__module.mobilebert.encoder.layer.13.attention.output/__module.mobilebert.encoder.layer.13.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.66)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.619 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.619)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.619)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.intermediate/__module.mobilebert.encoder.layer.13.intermediate.dense # torch/nn/functional.py:1676:0
    %output.209 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.intermediate/__module.mobilebert.encoder.layer.13.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.intermediate/__module.mobilebert.encoder.layer.13.intermediate.dense # torch/nn/functional.py:1678:0
    %input.269 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.209, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.intermediate/__module.mobilebert.encoder.layer.13.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.269)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.622 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.112 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.622)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.622)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.112, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.271 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.271)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.623 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.623)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.623)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.623)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.113 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.113)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.621 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.621)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.621)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.dense # torch/nn/functional.py:1676:0
    %output.210 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.dense # torch/nn/functional.py:1678:0
    %layer_output.14 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.210, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.14)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.626 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.113 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.626)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.626)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.113, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.273 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.273)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.624 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.624)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.624)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.211 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.272 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.211, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.272)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.625 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.70 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.output/__module.mobilebert.encoder.layer.13.output.bottleneck/__module.mobilebert.encoder.layer.13.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.70)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.588 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.588)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.588)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.585 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.585)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.585)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.587 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.587)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.587)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.14 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.14)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.586 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.586)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.586)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.197 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.106 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.197, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.input/__module.mobilebert.encoder.layer.13.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.106)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.590 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.590)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.590)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.255 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.255)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.589 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.589)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.589)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.198 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.107 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.198, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.bottleneck/__module.mobilebert.encoder.layer.13.bottleneck.attention/__module.mobilebert.encoder.layer.13.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.107)

FFNLayer._actual_script_module
  graph(%self.600 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.600)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.600)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.601 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.601)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.261 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.261)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.603 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.603)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.603)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.109 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.109)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.602 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.602)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.602)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.intermediate/__module.mobilebert.encoder.layer.13.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.203 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.intermediate/__module.mobilebert.encoder.layer.13.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.intermediate/__module.mobilebert.encoder.layer.13.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.260 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.203, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.intermediate/__module.mobilebert.encoder.layer.13.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.260)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.605 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.109 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.605)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.605)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.109, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.262 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.262)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.604 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.604)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.604)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.204 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.67 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.204, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.0/__module.mobilebert.encoder.layer.13.ffn.0.output/__module.mobilebert.encoder.layer.13.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.67)

FFNLayer._actual_script_module
  graph(%self.606 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.606)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.606)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.607 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.607)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.264 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.264)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.609 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.609)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.609)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.110 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.110)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.608 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.608)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.608)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.intermediate/__module.mobilebert.encoder.layer.13.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.205 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.intermediate/__module.mobilebert.encoder.layer.13.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.intermediate/__module.mobilebert.encoder.layer.13.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.263 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.205, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.intermediate/__module.mobilebert.encoder.layer.13.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.263)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.611 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.110 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.611)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.611)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.110, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.265 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.265)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.610 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.610)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.610)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.206 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.68 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.206, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.1/__module.mobilebert.encoder.layer.13.ffn.1.output/__module.mobilebert.encoder.layer.13.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.68)

FFNLayer._actual_script_module
  graph(%self.612 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.612)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.612)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.613 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.613)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.267 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.267)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.615 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.615)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.615)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.111 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.111)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.614 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.614)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.614)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.intermediate/__module.mobilebert.encoder.layer.13.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.207 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.intermediate/__module.mobilebert.encoder.layer.13.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.intermediate/__module.mobilebert.encoder.layer.13.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.266 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.207, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.intermediate/__module.mobilebert.encoder.layer.13.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.266)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.617 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.111 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.617)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.617)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.111, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.268 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.268)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.616 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.616)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.616)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.208 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.69 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.208, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.13/__module.mobilebert.encoder.layer.13.ffn.2/__module.mobilebert.encoder.layer.13.ffn.2.output/__module.mobilebert.encoder.layer.13.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.69)

MobileBertLayer._actual_script_module
  graph(%self.627 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.627)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.627)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.627)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.627)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.627)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.627)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.627)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.635 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.635)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.635)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.628 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.628)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.628)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.662 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.662)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.289 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.intermediate # torch/nn/functional.py:1119:0
    return (%input.289)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.664 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.664)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.664)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.664)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.120 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.120)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.641 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.641)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.641)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.116 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.116)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.636 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.636)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.636)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.636)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.636)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %x.86 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %query_layer.15 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.86, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %x.88 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %key_layer.15 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.88, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %x.90 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %value_layer.15 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.90, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.15, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.29 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.15, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.30 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.29, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.275 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.30, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %input.276 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.275, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.276)
    %context_layer.29 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.29, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.30 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.30, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.30, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self
    %input.277 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.30, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.277)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.640 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.276 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.15 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.276, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.15)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.638 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.638)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.638)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.key # torch/nn/functional.py:1676:0
    %output.215 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.key # torch/nn/functional.py:1678:0
    %x.87 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.215, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.87)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.637 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.637)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.637)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.query # torch/nn/functional.py:1676:0
    %output.214 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.query # torch/nn/functional.py:1678:0
    %x.85 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.214, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.85)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.639 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.639)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.639)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.value # torch/nn/functional.py:1676:0
    %output.216 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.value # torch/nn/functional.py:1678:0
    %x.89 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.216, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.self/__module.mobilebert.encoder.layer.14.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.89)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.643 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.116 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.643)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.643)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.116, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.278 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.278)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.642 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.642)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.642)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.dense # torch/nn/functional.py:1676:0
    %output.217 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.71 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.217, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.attention/__module.mobilebert.encoder.layer.14.attention.output/__module.mobilebert.encoder.layer.14.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.71)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.663 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.663)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.663)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.intermediate/__module.mobilebert.encoder.layer.14.intermediate.dense # torch/nn/functional.py:1676:0
    %output.224 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.intermediate/__module.mobilebert.encoder.layer.14.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.intermediate/__module.mobilebert.encoder.layer.14.intermediate.dense # torch/nn/functional.py:1678:0
    %input.288 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.224, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.intermediate/__module.mobilebert.encoder.layer.14.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.288)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.666 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.120 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.666)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.666)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.120, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.290 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.290)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.667 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.667)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.667)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.667)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.121 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.121)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.665 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.665)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.665)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.dense # torch/nn/functional.py:1676:0
    %output.225 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.dense # torch/nn/functional.py:1678:0
    %layer_output.15 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.225, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.15)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.670 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.121 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.670)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.670)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.121, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.292 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.292)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.668 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.668)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.668)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.226 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.291 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.226, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.291)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.669 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.75 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.output/__module.mobilebert.encoder.layer.14.output.bottleneck/__module.mobilebert.encoder.layer.14.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.75)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.632 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.632)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.632)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.629 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.629)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.629)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.631 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.631)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.631)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.15 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.15)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.630 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.630)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.630)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.212 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.114 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.212, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.input/__module.mobilebert.encoder.layer.14.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.114)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.634 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.634)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.634)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.274 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.274)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.633 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.633)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.633)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.213 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.115 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.213, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.bottleneck/__module.mobilebert.encoder.layer.14.bottleneck.attention/__module.mobilebert.encoder.layer.14.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.115)

FFNLayer._actual_script_module
  graph(%self.644 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.644)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.644)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.645 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.645)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.280 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.280)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.647 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.647)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.647)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.117 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.117)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.646 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.646)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.646)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.intermediate/__module.mobilebert.encoder.layer.14.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.218 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.intermediate/__module.mobilebert.encoder.layer.14.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.intermediate/__module.mobilebert.encoder.layer.14.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.279 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.218, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.intermediate/__module.mobilebert.encoder.layer.14.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.279)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.649 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.117 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.649)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.649)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.117, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.281 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.281)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.648 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.648)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.648)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.219 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.72 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.219, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.0/__module.mobilebert.encoder.layer.14.ffn.0.output/__module.mobilebert.encoder.layer.14.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.72)

FFNLayer._actual_script_module
  graph(%self.650 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.650)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.650)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.651 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.651)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.283 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.283)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.653 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.653)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.653)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.118 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.118)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.652 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.652)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.652)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.intermediate/__module.mobilebert.encoder.layer.14.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.220 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.intermediate/__module.mobilebert.encoder.layer.14.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.intermediate/__module.mobilebert.encoder.layer.14.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.282 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.220, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.intermediate/__module.mobilebert.encoder.layer.14.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.282)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.655 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.118 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.655)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.655)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.118, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.284 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.284)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.654 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.654)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.654)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.221 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.73 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.221, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.1/__module.mobilebert.encoder.layer.14.ffn.1.output/__module.mobilebert.encoder.layer.14.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.73)

FFNLayer._actual_script_module
  graph(%self.656 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.656)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.656)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.657 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.657)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.286 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.286)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.659 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.659)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.659)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.119 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.119)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.658 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.658)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.658)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.intermediate/__module.mobilebert.encoder.layer.14.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.222 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.intermediate/__module.mobilebert.encoder.layer.14.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.intermediate/__module.mobilebert.encoder.layer.14.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.285 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.222, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.intermediate/__module.mobilebert.encoder.layer.14.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.285)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.661 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.119 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.661)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.661)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.119, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.287 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.287)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.660 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.660)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.660)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.223 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.74 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.223, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.14/__module.mobilebert.encoder.layer.14.ffn.2/__module.mobilebert.encoder.layer.14.ffn.2.output/__module.mobilebert.encoder.layer.14.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.74)

MobileBertLayer._actual_script_module
  graph(%self.671 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.671)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.671)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.671)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.671)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.671)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.671)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.671)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.679 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.679)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.679)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.672 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.672)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.672)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.706 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.706)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.308 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.intermediate # torch/nn/functional.py:1119:0
    return (%input.308)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.708 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.708)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.708)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.708)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.128 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.128)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.685 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.685)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.685)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.124 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.124)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.680 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.680)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.680)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.680)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.680)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %x.92 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %query_layer.16 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.92, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %x.94 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %key_layer.16 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.94, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %x.96 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %value_layer.16 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.96, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.16, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.31 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.16, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.32 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.31, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.294 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.32, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %input.295 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.294, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.295)
    %context_layer.31 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.31, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.32 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.32, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.32, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self
    %input.296 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.32, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.296)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.684 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.295 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.16 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.295, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.16)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.682 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.682)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.682)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.key # torch/nn/functional.py:1676:0
    %output.230 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.key # torch/nn/functional.py:1678:0
    %x.93 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.230, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.93)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.681 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.681)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.681)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.query # torch/nn/functional.py:1676:0
    %output.229 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.query # torch/nn/functional.py:1678:0
    %x.91 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.229, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.91)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.683 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.683)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.683)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.value # torch/nn/functional.py:1676:0
    %output.231 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.value # torch/nn/functional.py:1678:0
    %x.95 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.231, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.self/__module.mobilebert.encoder.layer.15.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.95)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.687 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.124 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.687)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.687)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.124, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.297 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.297)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.686 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.686)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.686)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.dense # torch/nn/functional.py:1676:0
    %output.232 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.76 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.232, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.attention/__module.mobilebert.encoder.layer.15.attention.output/__module.mobilebert.encoder.layer.15.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.76)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.707 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.707)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.707)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.intermediate/__module.mobilebert.encoder.layer.15.intermediate.dense # torch/nn/functional.py:1676:0
    %output.239 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.intermediate/__module.mobilebert.encoder.layer.15.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.intermediate/__module.mobilebert.encoder.layer.15.intermediate.dense # torch/nn/functional.py:1678:0
    %input.307 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.239, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.intermediate/__module.mobilebert.encoder.layer.15.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.307)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.710 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.128 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.710)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.710)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.128, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.309 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.309)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.711 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.711)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.711)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.711)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.129 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.129)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.709 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.709)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.709)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.dense # torch/nn/functional.py:1676:0
    %output.240 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.dense # torch/nn/functional.py:1678:0
    %layer_output.16 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.240, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.16)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.714 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.129 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.714)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.714)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.129, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.311 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.311)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.712 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.712)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.712)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.241 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.310 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.241, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.310)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.713 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.80 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.output/__module.mobilebert.encoder.layer.15.output.bottleneck/__module.mobilebert.encoder.layer.15.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.80)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.676 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.676)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.676)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.673 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.673)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.673)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.675 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.675)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.675)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.16 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.16)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.674 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.674)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.674)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.227 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.122 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.227, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.input/__module.mobilebert.encoder.layer.15.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.122)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.678 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.678)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.678)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.293 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.293)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.677 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.677)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.677)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.228 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.123 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.228, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.bottleneck/__module.mobilebert.encoder.layer.15.bottleneck.attention/__module.mobilebert.encoder.layer.15.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.123)

FFNLayer._actual_script_module
  graph(%self.688 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.688)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.688)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.689 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.689)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.299 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.299)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.691 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.691)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.691)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.125 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.125)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.690 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.690)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.690)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.intermediate/__module.mobilebert.encoder.layer.15.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.233 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.intermediate/__module.mobilebert.encoder.layer.15.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.intermediate/__module.mobilebert.encoder.layer.15.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.298 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.233, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.intermediate/__module.mobilebert.encoder.layer.15.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.298)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.693 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.125 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.693)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.693)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.125, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.300 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.300)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.692 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.692)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.692)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.234 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.77 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.234, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.0/__module.mobilebert.encoder.layer.15.ffn.0.output/__module.mobilebert.encoder.layer.15.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.77)

FFNLayer._actual_script_module
  graph(%self.694 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.694)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.694)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.695 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.695)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.302 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.302)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.697 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.697)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.697)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.126 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.126)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.696 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.696)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.696)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.intermediate/__module.mobilebert.encoder.layer.15.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.235 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.intermediate/__module.mobilebert.encoder.layer.15.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.intermediate/__module.mobilebert.encoder.layer.15.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.301 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.235, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.intermediate/__module.mobilebert.encoder.layer.15.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.301)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.699 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.126 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.699)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.699)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.126, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.303 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.303)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.698 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.698)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.698)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.236 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.78 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.236, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.1/__module.mobilebert.encoder.layer.15.ffn.1.output/__module.mobilebert.encoder.layer.15.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.78)

FFNLayer._actual_script_module
  graph(%self.700 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.700)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.700)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.701 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.701)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.305 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.305)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.703 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.703)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.703)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.127 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.127)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.702 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.702)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.702)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.intermediate/__module.mobilebert.encoder.layer.15.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.237 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.intermediate/__module.mobilebert.encoder.layer.15.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.intermediate/__module.mobilebert.encoder.layer.15.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.304 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.237, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.intermediate/__module.mobilebert.encoder.layer.15.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.304)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.705 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.127 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.705)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.705)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.127, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.306 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.306)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.704 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.704)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.704)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.238 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.79 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.238, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.15/__module.mobilebert.encoder.layer.15.ffn.2/__module.mobilebert.encoder.layer.15.ffn.2.output/__module.mobilebert.encoder.layer.15.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.79)

MobileBertLayer._actual_script_module
  graph(%self.715 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.715)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.715)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.715)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.715)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.715)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.715)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.715)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.723 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.723)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.723)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.716 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.716)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.716)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.750 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.750)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.327 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.intermediate # torch/nn/functional.py:1119:0
    return (%input.327)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.752 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.752)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.752)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.752)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.136 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.136)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.729 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.729)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.729)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.132 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.132)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.724 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.724)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.724)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.724)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.724)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %x.98 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %query_layer.17 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.98, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %x.100 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %key_layer.17 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.100, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %x.102 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %value_layer.17 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.102, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.17, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.33 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.17, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.34 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.33, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.313 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.34, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %input.314 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.313, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.314)
    %context_layer.33 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.33, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.34 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.34, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.34, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self
    %input.315 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.34, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.315)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.728 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.314 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.17 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.314, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.17)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.726 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.726)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.726)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.key # torch/nn/functional.py:1676:0
    %output.245 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.key # torch/nn/functional.py:1678:0
    %x.99 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.245, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.99)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.725 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.725)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.725)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.query # torch/nn/functional.py:1676:0
    %output.244 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.query # torch/nn/functional.py:1678:0
    %x.97 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.244, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.97)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.727 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.727)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.727)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.value # torch/nn/functional.py:1676:0
    %output.246 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.value # torch/nn/functional.py:1678:0
    %x.101 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.246, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.self/__module.mobilebert.encoder.layer.16.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.101)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.731 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.132 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.731)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.731)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.132, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.316 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.316)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.730 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.730)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.730)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.dense # torch/nn/functional.py:1676:0
    %output.247 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.81 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.247, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.attention/__module.mobilebert.encoder.layer.16.attention.output/__module.mobilebert.encoder.layer.16.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.81)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.751 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.751)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.751)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.intermediate/__module.mobilebert.encoder.layer.16.intermediate.dense # torch/nn/functional.py:1676:0
    %output.254 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.intermediate/__module.mobilebert.encoder.layer.16.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.intermediate/__module.mobilebert.encoder.layer.16.intermediate.dense # torch/nn/functional.py:1678:0
    %input.326 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.254, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.intermediate/__module.mobilebert.encoder.layer.16.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.326)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.754 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.136 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.754)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.754)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.136, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.328 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.328)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.755 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.755)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.755)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.755)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.137 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.137)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.753 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.753)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.753)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.dense # torch/nn/functional.py:1676:0
    %output.255 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.dense # torch/nn/functional.py:1678:0
    %layer_output.17 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.255, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.17)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.758 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.137 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.758)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.758)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.137, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.330 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.330)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.756 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.756)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.756)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.256 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.329 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.256, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.329)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.757 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.85 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.output/__module.mobilebert.encoder.layer.16.output.bottleneck/__module.mobilebert.encoder.layer.16.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.85)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.720 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.720)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.720)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.717 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.717)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.717)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.719 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.719)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.719)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.17 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.17)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.718 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.718)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.718)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.242 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.130 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.242, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.input/__module.mobilebert.encoder.layer.16.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.130)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.722 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.722)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.722)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.312 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.312)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.721 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.721)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.721)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.243 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.131 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.243, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.bottleneck/__module.mobilebert.encoder.layer.16.bottleneck.attention/__module.mobilebert.encoder.layer.16.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.131)

FFNLayer._actual_script_module
  graph(%self.732 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.732)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.732)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.733 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.733)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.318 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.318)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.735 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.735)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.735)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.133 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.133)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.734 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.734)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.734)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.intermediate/__module.mobilebert.encoder.layer.16.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.248 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.intermediate/__module.mobilebert.encoder.layer.16.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.intermediate/__module.mobilebert.encoder.layer.16.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.317 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.248, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.intermediate/__module.mobilebert.encoder.layer.16.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.317)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.737 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.133 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.737)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.737)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.133, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.319 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.319)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.736 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.736)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.736)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.249 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.82 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.249, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.0/__module.mobilebert.encoder.layer.16.ffn.0.output/__module.mobilebert.encoder.layer.16.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.82)

FFNLayer._actual_script_module
  graph(%self.738 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.738)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.738)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.739 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.739)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.321 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.321)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.741 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.741)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.741)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.134 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.134)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.740 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.740)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.740)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.intermediate/__module.mobilebert.encoder.layer.16.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.250 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.intermediate/__module.mobilebert.encoder.layer.16.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.intermediate/__module.mobilebert.encoder.layer.16.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.320 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.250, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.intermediate/__module.mobilebert.encoder.layer.16.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.320)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.743 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.134 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.743)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.743)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.134, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.322 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.322)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.742 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.742)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.742)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.251 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.83 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.251, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.1/__module.mobilebert.encoder.layer.16.ffn.1.output/__module.mobilebert.encoder.layer.16.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.83)

FFNLayer._actual_script_module
  graph(%self.744 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.744)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.744)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.745 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.745)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.324 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.324)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.747 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.747)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.747)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.135 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.135)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.746 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.746)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.746)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.intermediate/__module.mobilebert.encoder.layer.16.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.252 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.intermediate/__module.mobilebert.encoder.layer.16.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.intermediate/__module.mobilebert.encoder.layer.16.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.323 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.252, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.intermediate/__module.mobilebert.encoder.layer.16.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.323)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.749 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.135 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.749)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.749)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.135, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.325 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.325)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.748 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.748)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.748)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.253 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.84 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.253, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.16/__module.mobilebert.encoder.layer.16.ffn.2/__module.mobilebert.encoder.layer.16.ffn.2.output/__module.mobilebert.encoder.layer.16.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.84)

MobileBertLayer._actual_script_module
  graph(%self.759 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.759)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.759)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.759)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.759)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.759)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.759)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.759)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.767 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.767)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.767)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.760 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.760)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.760)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.794 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.794)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.346 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.intermediate # torch/nn/functional.py:1119:0
    return (%input.346)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.796 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.796)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.796)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.796)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.144 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.144)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.773 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.773)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.773)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.140 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.140)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.768 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.768)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.768)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.768)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.768)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %x.104 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %query_layer.18 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.104, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %x.106 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %key_layer.18 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.106, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %x.108 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %value_layer.18 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.108, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.18, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.35 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.18, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.36 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.35, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.332 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.36, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %input.333 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.332, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.333)
    %context_layer.35 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.18), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.35, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.36 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.36, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.36, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self
    %input.334 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.36, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.334)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.772 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.333 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.18 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.333, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.18)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.770 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.770)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.770)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.key # torch/nn/functional.py:1676:0
    %output.260 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.key # torch/nn/functional.py:1678:0
    %x.105 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.260, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.105)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.769 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.769)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.769)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.query # torch/nn/functional.py:1676:0
    %output.259 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.query # torch/nn/functional.py:1678:0
    %x.103 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.259, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.103)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.771 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.771)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.771)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.value # torch/nn/functional.py:1676:0
    %output.261 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.value # torch/nn/functional.py:1678:0
    %x.107 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.261, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.self/__module.mobilebert.encoder.layer.17.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.107)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.775 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.140 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.775)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.775)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.140, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.335 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.335)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.774 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.774)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.774)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.dense # torch/nn/functional.py:1676:0
    %output.262 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.86 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.262, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.attention/__module.mobilebert.encoder.layer.17.attention.output/__module.mobilebert.encoder.layer.17.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.86)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.795 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.795)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.795)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.intermediate/__module.mobilebert.encoder.layer.17.intermediate.dense # torch/nn/functional.py:1676:0
    %output.269 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.intermediate/__module.mobilebert.encoder.layer.17.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.intermediate/__module.mobilebert.encoder.layer.17.intermediate.dense # torch/nn/functional.py:1678:0
    %input.345 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.269, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.intermediate/__module.mobilebert.encoder.layer.17.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.345)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.798 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.144 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.798)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.798)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.144, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.347 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.347)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.799 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.799)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.799)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.799)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.145 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.145)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.797 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.797)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.797)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.dense # torch/nn/functional.py:1676:0
    %output.270 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.dense # torch/nn/functional.py:1678:0
    %layer_output.18 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.270, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.18)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.802 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.145 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.802)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.802)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.145, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.349 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.349)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.800 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.800)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.800)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.271 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.348 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.271, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.348)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.801 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.90 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.output/__module.mobilebert.encoder.layer.17.output.bottleneck/__module.mobilebert.encoder.layer.17.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.90)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.764 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.764)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.764)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.761 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.761)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.761)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.763 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.763)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.763)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.18 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.18)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.762 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.762)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.762)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.257 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.138 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.257, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.input/__module.mobilebert.encoder.layer.17.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.138)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.766 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.766)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.766)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.331 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.331)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.765 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.765)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.765)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.258 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.139 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.258, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.bottleneck/__module.mobilebert.encoder.layer.17.bottleneck.attention/__module.mobilebert.encoder.layer.17.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.139)

FFNLayer._actual_script_module
  graph(%self.776 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.776)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.776)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.777 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.777)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.337 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.337)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.779 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.779)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.779)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.141 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.141)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.778 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.778)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.778)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.intermediate/__module.mobilebert.encoder.layer.17.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.263 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.intermediate/__module.mobilebert.encoder.layer.17.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.intermediate/__module.mobilebert.encoder.layer.17.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.336 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.263, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.intermediate/__module.mobilebert.encoder.layer.17.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.336)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.781 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.141 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.781)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.781)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.141, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.338 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.338)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.780 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.780)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.780)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.264 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.87 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.264, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.0/__module.mobilebert.encoder.layer.17.ffn.0.output/__module.mobilebert.encoder.layer.17.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.87)

FFNLayer._actual_script_module
  graph(%self.782 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.782)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.782)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.783 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.783)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.340 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.340)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.785 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.785)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.785)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.142 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.142)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.784 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.784)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.784)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.intermediate/__module.mobilebert.encoder.layer.17.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.265 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.intermediate/__module.mobilebert.encoder.layer.17.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.intermediate/__module.mobilebert.encoder.layer.17.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.339 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.265, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.intermediate/__module.mobilebert.encoder.layer.17.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.339)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.787 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.142 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.787)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.787)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.142, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.341 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.341)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.786 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.786)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.786)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.266 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.88 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.266, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.1/__module.mobilebert.encoder.layer.17.ffn.1.output/__module.mobilebert.encoder.layer.17.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.88)

FFNLayer._actual_script_module
  graph(%self.788 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.788)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.788)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.789 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.789)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.343 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.343)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.791 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.791)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.791)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.143 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.143)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.790 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.790)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.790)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.intermediate/__module.mobilebert.encoder.layer.17.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.267 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.intermediate/__module.mobilebert.encoder.layer.17.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.intermediate/__module.mobilebert.encoder.layer.17.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.342 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.267, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.intermediate/__module.mobilebert.encoder.layer.17.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.342)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.793 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.143 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.793)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.793)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.143, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.344 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.344)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.792 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.792)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.792)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.268 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.89 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.268, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.17/__module.mobilebert.encoder.layer.17.ffn.2/__module.mobilebert.encoder.layer.17.ffn.2.output/__module.mobilebert.encoder.layer.17.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.89)

MobileBertLayer._actual_script_module
  graph(%self.803 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.803)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.803)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.803)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.803)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.803)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.803)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.803)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.811 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.811)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.811)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.804 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.804)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.804)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.838 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.838)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.365 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.intermediate # torch/nn/functional.py:1119:0
    return (%input.365)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.840 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.840)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.840)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.840)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.152 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.152)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.817 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.817)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.817)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.148 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.148)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.812 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.812)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.812)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.812)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.812)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %x.110 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %query_layer.19 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.110, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %x.112 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %key_layer.19 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.112, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %x.114 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %value_layer.19 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.114, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.19, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.37 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.19, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.38 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.37, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.351 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.38, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %input.352 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.351, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.352)
    %context_layer.37 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.19), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.37, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.38 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.38, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.38, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self
    %input.353 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.38, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.353)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.816 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.352 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.19 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.352, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.19)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.814 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.814)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.814)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.key # torch/nn/functional.py:1676:0
    %output.275 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.key # torch/nn/functional.py:1678:0
    %x.111 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.275, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.111)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.813 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.813)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.813)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.query # torch/nn/functional.py:1676:0
    %output.274 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.query # torch/nn/functional.py:1678:0
    %x.109 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.274, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.109)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.815 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.815)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.815)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.value # torch/nn/functional.py:1676:0
    %output.276 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.value # torch/nn/functional.py:1678:0
    %x.113 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.276, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.self/__module.mobilebert.encoder.layer.18.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.113)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.819 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.148 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.819)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.819)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.148, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.354 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.354)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.818 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.818)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.818)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.dense # torch/nn/functional.py:1676:0
    %output.277 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.91 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.277, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.attention/__module.mobilebert.encoder.layer.18.attention.output/__module.mobilebert.encoder.layer.18.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.91)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.839 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.839)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.839)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.intermediate/__module.mobilebert.encoder.layer.18.intermediate.dense # torch/nn/functional.py:1676:0
    %output.284 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.intermediate/__module.mobilebert.encoder.layer.18.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.intermediate/__module.mobilebert.encoder.layer.18.intermediate.dense # torch/nn/functional.py:1678:0
    %input.364 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.284, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.intermediate/__module.mobilebert.encoder.layer.18.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.364)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.842 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.152 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.842)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.842)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.152, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.366 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.366)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.843 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.843)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.843)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.843)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.153 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.153)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.841 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.841)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.841)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.dense # torch/nn/functional.py:1676:0
    %output.285 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.dense # torch/nn/functional.py:1678:0
    %layer_output.19 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.285, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.19)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.846 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.153 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.846)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.846)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.153, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.368 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.368)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.844 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.844)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.844)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.286 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.367 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.286, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.367)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.845 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.95 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.output/__module.mobilebert.encoder.layer.18.output.bottleneck/__module.mobilebert.encoder.layer.18.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.95)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.808 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.808)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.808)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.805 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.805)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.805)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.807 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.807)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.807)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.19 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.19)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.806 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.806)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.806)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.272 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.146 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.272, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.input/__module.mobilebert.encoder.layer.18.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.146)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.810 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.810)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.810)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.350 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.350)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.809 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.809)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.809)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.273 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.147 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.273, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.bottleneck/__module.mobilebert.encoder.layer.18.bottleneck.attention/__module.mobilebert.encoder.layer.18.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.147)

FFNLayer._actual_script_module
  graph(%self.820 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.820)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.820)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.821 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.821)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.356 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.356)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.823 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.823)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.823)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.149 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.149)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.822 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.822)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.822)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.intermediate/__module.mobilebert.encoder.layer.18.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.278 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.intermediate/__module.mobilebert.encoder.layer.18.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.intermediate/__module.mobilebert.encoder.layer.18.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.355 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.278, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.intermediate/__module.mobilebert.encoder.layer.18.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.355)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.825 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.149 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.825)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.825)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.149, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.357 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.357)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.824 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.824)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.824)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.279 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.92 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.279, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.0/__module.mobilebert.encoder.layer.18.ffn.0.output/__module.mobilebert.encoder.layer.18.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.92)

FFNLayer._actual_script_module
  graph(%self.826 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.826)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.826)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.827 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.827)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.359 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.359)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.829 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.829)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.829)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.150 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.150)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.828 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.828)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.828)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.intermediate/__module.mobilebert.encoder.layer.18.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.280 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.intermediate/__module.mobilebert.encoder.layer.18.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.intermediate/__module.mobilebert.encoder.layer.18.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.358 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.280, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.intermediate/__module.mobilebert.encoder.layer.18.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.358)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.831 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.150 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.831)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.831)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.150, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.360 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.360)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.830 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.830)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.830)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.281 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.93 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.281, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.1/__module.mobilebert.encoder.layer.18.ffn.1.output/__module.mobilebert.encoder.layer.18.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.93)

FFNLayer._actual_script_module
  graph(%self.832 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.832)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.832)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.833 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.833)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.362 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.362)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.835 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.835)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.835)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.151 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.151)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.834 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.834)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.834)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.intermediate/__module.mobilebert.encoder.layer.18.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.282 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.intermediate/__module.mobilebert.encoder.layer.18.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.intermediate/__module.mobilebert.encoder.layer.18.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.361 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.282, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.intermediate/__module.mobilebert.encoder.layer.18.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.361)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.837 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.151 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.837)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.837)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.151, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.363 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.363)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.836 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.836)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.836)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.283 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.94 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.283, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.18/__module.mobilebert.encoder.layer.18.ffn.2/__module.mobilebert.encoder.layer.18.ffn.2.output/__module.mobilebert.encoder.layer.18.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.94)

MobileBertLayer._actual_script_module
  graph(%self.847 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.847)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.847)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.847)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.847)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.847)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.847)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.847)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.855 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.855)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.855)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.848 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.848)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.848)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.882 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.882)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.384 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.intermediate # torch/nn/functional.py:1119:0
    return (%input.384)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.884 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.884)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.884)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.884)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.160 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.160)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.861 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.861)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.861)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.156 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.156)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.856 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.856)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.856)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.856)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.856)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %x.116 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %query_layer.20 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.116, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %x.118 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %key_layer.20 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.118, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %x.120 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %value_layer.20 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.120, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.20, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.39 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.20, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.40 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.39, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.370 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.40, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %input.371 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.370, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.371)
    %context_layer.39 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.20), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.39, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.40 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.40, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.40, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self
    %input.372 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.40, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.372)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.860 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.371 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.20 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.371, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.20)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.858 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.858)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.858)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.key # torch/nn/functional.py:1676:0
    %output.290 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.key # torch/nn/functional.py:1678:0
    %x.117 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.290, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.117)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.857 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.857)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.857)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.query # torch/nn/functional.py:1676:0
    %output.289 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.query # torch/nn/functional.py:1678:0
    %x.115 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.289, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.115)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.859 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.859)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.859)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.value # torch/nn/functional.py:1676:0
    %output.291 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.value # torch/nn/functional.py:1678:0
    %x.119 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.291, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.self/__module.mobilebert.encoder.layer.19.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.119)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.863 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.156 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.863)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.863)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.156, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.373 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.373)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.862 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.862)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.862)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.dense # torch/nn/functional.py:1676:0
    %output.292 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.96 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.292, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.attention/__module.mobilebert.encoder.layer.19.attention.output/__module.mobilebert.encoder.layer.19.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.96)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.883 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.883)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.883)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.intermediate/__module.mobilebert.encoder.layer.19.intermediate.dense # torch/nn/functional.py:1676:0
    %output.299 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.intermediate/__module.mobilebert.encoder.layer.19.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.intermediate/__module.mobilebert.encoder.layer.19.intermediate.dense # torch/nn/functional.py:1678:0
    %input.383 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.299, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.intermediate/__module.mobilebert.encoder.layer.19.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.383)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.886 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.160 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.886)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.886)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.160, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.385 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.385)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.887 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.887)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.887)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.887)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.161 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.161)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.885 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.885)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.885)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.dense # torch/nn/functional.py:1676:0
    %output.300 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.dense # torch/nn/functional.py:1678:0
    %layer_output.20 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.300, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.20)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.890 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.161 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.890)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.890)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.161, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.387 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.387)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.888 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.888)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.888)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.301 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.386 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.301, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.386)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.889 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.100 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.output/__module.mobilebert.encoder.layer.19.output.bottleneck/__module.mobilebert.encoder.layer.19.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.100)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.852 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.852)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.852)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.849 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.849)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.849)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.851 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.851)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.851)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.20 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.20)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.850 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.850)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.850)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.287 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.154 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.287, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.input/__module.mobilebert.encoder.layer.19.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.154)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.854 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.854)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.854)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.369 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.369)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.853 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.853)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.853)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.288 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.155 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.288, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.bottleneck/__module.mobilebert.encoder.layer.19.bottleneck.attention/__module.mobilebert.encoder.layer.19.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.155)

FFNLayer._actual_script_module
  graph(%self.864 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.864)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.864)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.865 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.865)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.375 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.375)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.867 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.867)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.867)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.157 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.157)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.866 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.866)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.866)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.intermediate/__module.mobilebert.encoder.layer.19.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.293 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.intermediate/__module.mobilebert.encoder.layer.19.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.intermediate/__module.mobilebert.encoder.layer.19.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.374 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.293, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.intermediate/__module.mobilebert.encoder.layer.19.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.374)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.869 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.157 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.869)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.869)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.157, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.376 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.376)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.868 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.868)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.868)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.294 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.97 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.294, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.0/__module.mobilebert.encoder.layer.19.ffn.0.output/__module.mobilebert.encoder.layer.19.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.97)

FFNLayer._actual_script_module
  graph(%self.870 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.870)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.870)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.871 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.871)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.378 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.378)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.873 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.873)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.873)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.158 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.158)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.872 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.872)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.872)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.intermediate/__module.mobilebert.encoder.layer.19.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.295 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.intermediate/__module.mobilebert.encoder.layer.19.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.intermediate/__module.mobilebert.encoder.layer.19.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.377 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.295, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.intermediate/__module.mobilebert.encoder.layer.19.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.377)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.875 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.158 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.875)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.875)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.158, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.379 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.379)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.874 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.874)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.874)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.296 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.98 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.296, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.1/__module.mobilebert.encoder.layer.19.ffn.1.output/__module.mobilebert.encoder.layer.19.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.98)

FFNLayer._actual_script_module
  graph(%self.876 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.876)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.876)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.877 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.877)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.381 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.381)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.879 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.879)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.879)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.159 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.159)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.878 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.878)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.878)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.intermediate/__module.mobilebert.encoder.layer.19.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.297 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.intermediate/__module.mobilebert.encoder.layer.19.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.intermediate/__module.mobilebert.encoder.layer.19.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.380 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.297, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.intermediate/__module.mobilebert.encoder.layer.19.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.380)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.881 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.159 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.881)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.881)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.159, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.382 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.382)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.880 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.880)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.880)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.298 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.99 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.298, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.19/__module.mobilebert.encoder.layer.19.ffn.2/__module.mobilebert.encoder.layer.19.ffn.2.output/__module.mobilebert.encoder.layer.19.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.99)

MobileBertLayer._actual_script_module
  graph(%self.891 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.891)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.891)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.891)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.891)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.891)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.891)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.891)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.899 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.899)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.899)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.892 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.892)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.892)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.926 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.926)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.403 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.intermediate # torch/nn/functional.py:1119:0
    return (%input.403)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.928 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.928)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.928)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.928)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.168 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.168)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.905 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.905)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.905)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.164 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.164)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.900 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.900)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.900)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.900)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.900)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %x.122 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %query_layer.21 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.122, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %x.124 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %key_layer.21 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.124, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %x.126 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %value_layer.21 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.126, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.21, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.41 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.21, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.42 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.41, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.389 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.42, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %input.390 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.389, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.390)
    %context_layer.41 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.21), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.41, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.42 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.42, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.42, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self
    %input.391 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.42, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.391)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.904 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.390 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.21 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.390, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.21)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.902 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.902)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.902)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.key # torch/nn/functional.py:1676:0
    %output.305 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.key # torch/nn/functional.py:1678:0
    %x.123 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.305, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.123)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.901 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.901)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.901)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.query # torch/nn/functional.py:1676:0
    %output.304 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.query # torch/nn/functional.py:1678:0
    %x.121 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.304, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.121)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.903 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.903)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.903)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.value # torch/nn/functional.py:1676:0
    %output.306 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.value # torch/nn/functional.py:1678:0
    %x.125 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.306, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.self/__module.mobilebert.encoder.layer.20.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.125)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.907 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.164 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.907)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.907)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.164, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.392 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.392)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.906 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.906)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.906)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.dense # torch/nn/functional.py:1676:0
    %output.307 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.101 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.307, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.attention/__module.mobilebert.encoder.layer.20.attention.output/__module.mobilebert.encoder.layer.20.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.101)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.927 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.927)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.927)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.intermediate/__module.mobilebert.encoder.layer.20.intermediate.dense # torch/nn/functional.py:1676:0
    %output.314 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.intermediate/__module.mobilebert.encoder.layer.20.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.intermediate/__module.mobilebert.encoder.layer.20.intermediate.dense # torch/nn/functional.py:1678:0
    %input.402 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.314, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.intermediate/__module.mobilebert.encoder.layer.20.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.402)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.930 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.168 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.930)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.930)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.168, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.404 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.404)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.931 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.931)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.931)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.931)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.169 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.169)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.929 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.929)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.929)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.dense # torch/nn/functional.py:1676:0
    %output.315 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.dense # torch/nn/functional.py:1678:0
    %layer_output.21 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.315, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.21)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.934 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.169 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.934)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.934)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.169, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.406 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.406)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.932 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.932)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.932)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.316 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.405 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.316, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.405)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.933 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.105 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.output/__module.mobilebert.encoder.layer.20.output.bottleneck/__module.mobilebert.encoder.layer.20.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.105)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.896 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.896)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.896)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.893 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.893)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.893)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.895 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.895)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.895)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.21 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.21)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.894 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.894)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.894)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.302 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.162 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.302, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.input/__module.mobilebert.encoder.layer.20.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.162)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.898 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.898)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.898)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.388 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.388)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.897 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.897)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.897)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.303 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.163 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.303, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.bottleneck/__module.mobilebert.encoder.layer.20.bottleneck.attention/__module.mobilebert.encoder.layer.20.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.163)

FFNLayer._actual_script_module
  graph(%self.908 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.908)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.908)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.909 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.909)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.394 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.394)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.911 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.911)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.911)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.165 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.165)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.910 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.910)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.910)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.intermediate/__module.mobilebert.encoder.layer.20.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.308 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.intermediate/__module.mobilebert.encoder.layer.20.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.intermediate/__module.mobilebert.encoder.layer.20.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.393 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.308, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.intermediate/__module.mobilebert.encoder.layer.20.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.393)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.913 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.165 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.913)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.913)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.165, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.395 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.395)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.912 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.912)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.912)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.309 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.102 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.309, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.0/__module.mobilebert.encoder.layer.20.ffn.0.output/__module.mobilebert.encoder.layer.20.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.102)

FFNLayer._actual_script_module
  graph(%self.914 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.914)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.914)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.915 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.915)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.397 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.397)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.917 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.917)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.917)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.166 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.166)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.916 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.916)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.916)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.intermediate/__module.mobilebert.encoder.layer.20.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.310 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.intermediate/__module.mobilebert.encoder.layer.20.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.intermediate/__module.mobilebert.encoder.layer.20.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.396 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.310, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.intermediate/__module.mobilebert.encoder.layer.20.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.396)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.919 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.166 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.919)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.919)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.166, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.398 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.398)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.918 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.918)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.918)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.311 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.103 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.311, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.1/__module.mobilebert.encoder.layer.20.ffn.1.output/__module.mobilebert.encoder.layer.20.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.103)

FFNLayer._actual_script_module
  graph(%self.920 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.920)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.920)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.921 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.921)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.400 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.400)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.923 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.923)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.923)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.167 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.167)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.922 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.922)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.922)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.intermediate/__module.mobilebert.encoder.layer.20.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.312 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.intermediate/__module.mobilebert.encoder.layer.20.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.intermediate/__module.mobilebert.encoder.layer.20.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.399 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.312, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.intermediate/__module.mobilebert.encoder.layer.20.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.399)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.925 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.167 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.925)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.925)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.167, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.401 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.401)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.924 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.924)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.924)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.313 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.104 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.313, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.20/__module.mobilebert.encoder.layer.20.ffn.2/__module.mobilebert.encoder.layer.20.ffn.2.output/__module.mobilebert.encoder.layer.20.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.104)

MobileBertLayer._actual_script_module
  graph(%self.935 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.935)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.935)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.935)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.935)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.935)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.935)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.935)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.943 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.943)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.943)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.936 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.936)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.936)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.970 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.970)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.422 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.intermediate # torch/nn/functional.py:1119:0
    return (%input.422)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.972 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.972)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.972)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.972)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.176 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.176)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.949 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.949)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.949)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.172 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.172)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.944 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.944)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.944)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.944)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.944)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %x.128 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %query_layer.22 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.128, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %x.130 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %key_layer.22 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.130, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %x.132 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %value_layer.22 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.132, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.22, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.43 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.22, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.44 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.43, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.408 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.44, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %input.409 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.408, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.409)
    %context_layer.43 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.22), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.43, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.44 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.44, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.44, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self
    %input.410 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.44, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.410)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.948 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.409 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.22 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.409, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.22)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.946 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.946)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.946)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.key # torch/nn/functional.py:1676:0
    %output.320 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.key # torch/nn/functional.py:1678:0
    %x.129 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.320, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.129)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.945 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.945)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.945)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.query # torch/nn/functional.py:1676:0
    %output.319 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.query # torch/nn/functional.py:1678:0
    %x.127 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.319, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.127)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.947 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.947)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.947)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.value # torch/nn/functional.py:1676:0
    %output.321 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.value # torch/nn/functional.py:1678:0
    %x.131 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.321, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.self/__module.mobilebert.encoder.layer.21.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.131)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.951 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.172 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.951)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.951)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.172, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.411 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.411)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.950 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.950)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.950)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.dense # torch/nn/functional.py:1676:0
    %output.322 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.106 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.322, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.attention/__module.mobilebert.encoder.layer.21.attention.output/__module.mobilebert.encoder.layer.21.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.106)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.971 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.971)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.971)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.intermediate/__module.mobilebert.encoder.layer.21.intermediate.dense # torch/nn/functional.py:1676:0
    %output.329 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.intermediate/__module.mobilebert.encoder.layer.21.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.intermediate/__module.mobilebert.encoder.layer.21.intermediate.dense # torch/nn/functional.py:1678:0
    %input.421 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.329, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.intermediate/__module.mobilebert.encoder.layer.21.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.421)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.974 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.176 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.974)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.974)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.176, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.423 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.423)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.975 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.975)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.975)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.975)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.177 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.177)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.973 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.973)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.973)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.dense # torch/nn/functional.py:1676:0
    %output.330 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.dense # torch/nn/functional.py:1678:0
    %layer_output.22 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.330, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.22)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.978 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.177 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.978)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.978)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.177, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.425 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.425)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.976 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.976)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.976)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.331 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.424 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.331, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.424)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.977 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.110 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.output/__module.mobilebert.encoder.layer.21.output.bottleneck/__module.mobilebert.encoder.layer.21.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.110)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.940 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.940)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.940)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.937 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.937)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.937)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.939 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.939)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.939)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.22 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.22)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.938 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.938)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.938)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.317 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.170 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.317, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.input/__module.mobilebert.encoder.layer.21.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.170)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.942 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.942)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.942)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.407 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.407)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.941 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.941)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.941)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.318 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.171 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.318, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.bottleneck/__module.mobilebert.encoder.layer.21.bottleneck.attention/__module.mobilebert.encoder.layer.21.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.171)

FFNLayer._actual_script_module
  graph(%self.952 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.952)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.952)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.953 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.953)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.413 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.413)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.955 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.955)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.955)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.173 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.173)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.954 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.954)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.954)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.intermediate/__module.mobilebert.encoder.layer.21.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.323 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.intermediate/__module.mobilebert.encoder.layer.21.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.intermediate/__module.mobilebert.encoder.layer.21.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.412 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.323, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.intermediate/__module.mobilebert.encoder.layer.21.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.412)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.957 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.173 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.957)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.957)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.173, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.414 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.414)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.956 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.956)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.956)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.324 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.107 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.324, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.0/__module.mobilebert.encoder.layer.21.ffn.0.output/__module.mobilebert.encoder.layer.21.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.107)

FFNLayer._actual_script_module
  graph(%self.958 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.958)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.958)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.959 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.959)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.416 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.416)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.961 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.961)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.961)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.174 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.174)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.960 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.960)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.960)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.intermediate/__module.mobilebert.encoder.layer.21.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.325 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.intermediate/__module.mobilebert.encoder.layer.21.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.intermediate/__module.mobilebert.encoder.layer.21.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.415 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.325, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.intermediate/__module.mobilebert.encoder.layer.21.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.415)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.963 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.174 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.963)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.963)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.174, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.417 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.417)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.962 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.962)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.962)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.326 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.108 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.326, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.1/__module.mobilebert.encoder.layer.21.ffn.1.output/__module.mobilebert.encoder.layer.21.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.108)

FFNLayer._actual_script_module
  graph(%self.964 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.964)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.964)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.965 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.965)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.419 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.419)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.967 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.967)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.967)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.175 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.175)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.966 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.966)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.966)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.intermediate/__module.mobilebert.encoder.layer.21.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.327 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.intermediate/__module.mobilebert.encoder.layer.21.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.intermediate/__module.mobilebert.encoder.layer.21.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.418 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.327, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.intermediate/__module.mobilebert.encoder.layer.21.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.418)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.969 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.175 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.969)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.969)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.175, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.420 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.420)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.968 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.968)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.968)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.328 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.109 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.328, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.21/__module.mobilebert.encoder.layer.21.ffn.2/__module.mobilebert.encoder.layer.21.ffn.2.output/__module.mobilebert.encoder.layer.21.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.109)

MobileBertLayer._actual_script_module
  graph(%self.979 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.979)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.979)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.979)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.979)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.979)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.979)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.979)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.987 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.987)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.987)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.980 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.980)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.980)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1014 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1014)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.441 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.intermediate # torch/nn/functional.py:1119:0
    return (%input.441)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.1016 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.1016)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1016)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1016)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.184 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.184)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.993 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.993)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.993)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.180 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.180)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.988 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.988)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.988)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.988)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.988)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %x.134 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %query_layer.23 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.134, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %x.136 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %key_layer.23 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.136, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %x.138 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %value_layer.23 : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.138, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer.23, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.45 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer.23, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores.46 : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.45, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.427 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores.46, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %input.428 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.427, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.428)
    %context_layer.45 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer.23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.45, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer.46 : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer.46, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer.46, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self
    %input.429 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer.46, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.429)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.992 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.428 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs.23 : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.428, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs.23)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.990 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.990)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.990)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.key # torch/nn/functional.py:1676:0
    %output.335 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.key # torch/nn/functional.py:1678:0
    %x.135 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.335, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.135)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.989 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.989)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.989)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.query # torch/nn/functional.py:1676:0
    %output.334 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.query # torch/nn/functional.py:1678:0
    %x.133 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.334, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.133)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.991 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.991)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.991)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.value # torch/nn/functional.py:1676:0
    %output.336 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.value # torch/nn/functional.py:1678:0
    %x.137 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.336, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.self/__module.mobilebert.encoder.layer.22.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.137)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.995 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.180 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.995)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.995)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.180, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.430 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.430)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.994 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.994)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.994)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.dense # torch/nn/functional.py:1676:0
    %output.337 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.111 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.337, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.attention/__module.mobilebert.encoder.layer.22.attention.output/__module.mobilebert.encoder.layer.22.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.111)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1015 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1015)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1015)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.intermediate/__module.mobilebert.encoder.layer.22.intermediate.dense # torch/nn/functional.py:1676:0
    %output.344 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.intermediate/__module.mobilebert.encoder.layer.22.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.intermediate/__module.mobilebert.encoder.layer.22.intermediate.dense # torch/nn/functional.py:1678:0
    %input.440 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.344, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.intermediate/__module.mobilebert.encoder.layer.22.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.440)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1018 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.184 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1018)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1018)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.184, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.442 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.442)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.1019 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1019)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.1019)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1019)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor.185 : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.185)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.1017 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1017)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1017)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.dense # torch/nn/functional.py:1676:0
    %output.345 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.dense # torch/nn/functional.py:1678:0
    %layer_output.23 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.345, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output.23)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.1022 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.185 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1022)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1022)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor.185, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.444 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.444)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.1020 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1020)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1020)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.346 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.443 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.346, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.443)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.1021 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs.115 : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.output/__module.mobilebert.encoder.layer.22.output.bottleneck/__module.mobilebert.encoder.layer.22.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs.115)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.984 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.984)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.984)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.981 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.981)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.981)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.983 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.983)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.983)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor.23 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor.23)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.982 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.982)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.982)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.332 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.178 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.332, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.input/__module.mobilebert.encoder.layer.22.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.178)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.986 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.986)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.986)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.426 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.426)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.985 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.985)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.985)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.333 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.179 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.333, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.bottleneck/__module.mobilebert.encoder.layer.22.bottleneck.attention/__module.mobilebert.encoder.layer.22.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.179)

FFNLayer._actual_script_module
  graph(%self.996 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.996)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.996)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.997 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.997)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.432 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.432)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.999 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.999)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.999)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.181 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.181)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.998 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.998)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.998)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.intermediate/__module.mobilebert.encoder.layer.22.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.338 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.intermediate/__module.mobilebert.encoder.layer.22.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.intermediate/__module.mobilebert.encoder.layer.22.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.431 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.338, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.intermediate/__module.mobilebert.encoder.layer.22.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.431)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1001 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.181 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1001)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1001)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.181, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.433 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.433)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.1000 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1000)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1000)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.339 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.112 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.339, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.0/__module.mobilebert.encoder.layer.22.ffn.0.output/__module.mobilebert.encoder.layer.22.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.112)

FFNLayer._actual_script_module
  graph(%self.1002 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.1002)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.1002)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1003 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1003)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.435 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.435)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.1005 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1005)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1005)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.182 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.182)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1004 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1004)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1004)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.intermediate/__module.mobilebert.encoder.layer.22.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.340 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.intermediate/__module.mobilebert.encoder.layer.22.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.intermediate/__module.mobilebert.encoder.layer.22.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.434 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.340, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.intermediate/__module.mobilebert.encoder.layer.22.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.434)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1007 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.182 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1007)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1007)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.182, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.436 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.436)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.1006 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1006)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1006)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.341 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.113 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.341, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.1/__module.mobilebert.encoder.layer.22.ffn.1.output/__module.mobilebert.encoder.layer.22.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.113)

FFNLayer._actual_script_module
  graph(%self.1008 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.1008)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.1008)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1009 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1009)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.438 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.438)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.1011 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1011)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1011)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.183 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.183)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1010 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1010)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1010)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.intermediate/__module.mobilebert.encoder.layer.22.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.342 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.intermediate/__module.mobilebert.encoder.layer.22.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.intermediate/__module.mobilebert.encoder.layer.22.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.437 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.342, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.intermediate/__module.mobilebert.encoder.layer.22.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.437)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1013 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.183 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1013)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1013)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.183, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.439 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.439)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.1012 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1012)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1012)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.343 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.114 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.343, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.22/__module.mobilebert.encoder.layer.22.ffn.2/__module.mobilebert.encoder.layer.22.ffn.2.output/__module.mobilebert.encoder.layer.22.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.114)

MobileBertLayer._actual_script_module
  graph(%self.1023 : __torch__.transformers.modeling_mobilebert.MobileBertLayer,
        %1 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertOutput = prim::GetAttr[name="output"](%self.1023)
    %4 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.1023)
    %5 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.1023)
    %6 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="2"](%5)
    %7 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.1023)
    %8 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="1"](%7)
    %9 : __torch__.torch.nn.modules.container.ModuleList = prim::GetAttr[name="ffn"](%self.1023)
    %10 : __torch__.transformers.modeling_mobilebert.FFNLayer = prim::GetAttr[name="0"](%9)
    %11 : __torch__.transformers.modeling_mobilebert.MobileBertAttention = prim::GetAttr[name="attention"](%self.1023)
    %12 : __torch__.transformers.modeling_mobilebert.Bottleneck = prim::GetAttr[name="bottleneck"](%self.1023)
    %30 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%12, %1)
    %14 : Float(17:1664, 13:128, 128:1), %15 : Float(17:1664, 13:128, 128:1) = prim::TupleUnpack(%30)
    %31 : Tensor = prim::CallMethod[name="forward"](%11, %14, %1, %attention_mask, %15)
    %32 : Tensor = prim::CallMethod[name="forward"](%10, %31)
    %33 : Tensor = prim::CallMethod[name="forward"](%8, %32)
    %34 : Tensor = prim::CallMethod[name="forward"](%6, %33)
    %35 : Tensor = prim::CallMethod[name="forward"](%4, %34)
    %36 : Tensor = prim::CallMethod[name="forward"](%3, %35, %34, %1)
    return (%36)

MobileBertLayer.attention
MobileBertAttention._actual_script_module
  graph(%self.1031 : __torch__.transformers.modeling_mobilebert.MobileBertAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1),
        %4 : Float(17:1664, 13:128, 128:1)):
    %5 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput = prim::GetAttr[name="output"](%self.1031)
    %6 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention = prim::GetAttr[name="self"](%self.1031)
    %9 : Tensor = prim::CallMethod[name="forward"](%6, %1, %2, %attention_mask)
    %10 : Tensor = prim::CallMethod[name="forward"](%5, %9, %4)
    return (%10)

MobileBertLayer.bottleneck
Bottleneck._actual_script_module
  graph(%self.1024 : __torch__.transformers.modeling_mobilebert.Bottleneck,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="attention"](%self.1024)
    %3 : __torch__.transformers.modeling_mobilebert.BottleneckLayer = prim::GetAttr[name="input"](%self.1024)
    %7 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %8 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %6 : (Float(17:1664, 13:128, 128:1), Float(17:1664, 13:128, 128:1)) = prim::TupleConstruct(%8, %7)
    return (%6)

MobileBertLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1058 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1058)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.460 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.intermediate # torch/nn/functional.py:1119:0
    return (%input.460)

MobileBertLayer.output
MobileBertOutput._actual_script_module
  graph(%self.1060 : __torch__.transformers.modeling_mobilebert.MobileBertOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1),
        %3 : Float(17:6656, 13:512, 512:1)):
    %4 : __torch__.transformers.modeling_mobilebert.OutputBottleneck = prim::GetAttr[name="bottleneck"](%self.1060)
    %5 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1060)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1060)
    %12 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output # transformers/modeling_mobilebert.py:405:0
    %input_tensor.192 : Float(17:1664, 13:128, 128:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output # transformers/modeling_mobilebert.py:405:0
    %13 : Tensor = prim::CallMethod[name="forward"](%5, %input_tensor.192)
    %14 : Tensor = prim::CallMethod[name="forward"](%4, %13, %3)
    return (%14)

MobileBertAttention.output
MobileBertSelfOutput._actual_script_module
  graph(%self.1037 : __torch__.transformers.modeling_mobilebert.MobileBertSelfOutput,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1037)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1037)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output # transformers/modeling_mobilebert.py:301:0
    %input_tensor.188 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output # transformers/modeling_mobilebert.py:301:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.188)
    return (%10)

MobileBertAttention.self
MobileBertSelfAttention._actual_script_module
  graph(%self.1032 : __torch__.transformers.modeling_mobilebert.MobileBertSelfAttention,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1),
        %attention_mask : Float(17:13, 1:13, 1:13, 13:1)):
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.1032)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="value"](%self.1032)
    %6 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="key"](%self.1032)
    %7 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="query"](%self.1032)
    %112 : Tensor = prim::CallMethod[name="forward"](%7, %1)
    %113 : Tensor = prim::CallMethod[name="forward"](%6, %1)
    %114 : Tensor = prim::CallMethod[name="forward"](%5, %2)
    %11 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %12 : int = aten::size(%112, %11), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %13 : Long() = prim::NumToTensor(%12), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %14 : int = aten::Int(%13), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %15 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %16 : int = aten::size(%112, %15), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %17 : Long() = prim::NumToTensor(%16), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %18 : int = aten::Int(%17), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %22 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %23 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %24 : int[] = prim::ListConstruct(%14, %18, %22, %23), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %x.140 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%112, %24), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %26 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %27 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %28 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %29 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %30 : int[] = prim::ListConstruct(%26, %27, %28, %29), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %query_layer : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.140, %30), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %32 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %33 : int = aten::size(%113, %32), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %34 : Long() = prim::NumToTensor(%33), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %35 : int = aten::Int(%34), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %36 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %37 : int = aten::size(%113, %36), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %38 : Long() = prim::NumToTensor(%37), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %39 : int = aten::Int(%38), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %43 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %44 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %45 : int[] = prim::ListConstruct(%35, %39, %43, %44), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %x.142 : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%113, %45), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %47 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %48 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %49 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %50 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %51 : int[] = prim::ListConstruct(%47, %48, %49, %50), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %key_layer : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x.142, %51), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %53 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %54 : int = aten::size(%114, %53), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %55 : Long() = prim::NumToTensor(%54), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %56 : int = aten::Int(%55), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %57 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %58 : int = aten::size(%114, %57), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:243:0
    %59 : Long() = prim::NumToTensor(%58), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %60 : int = aten::Int(%59), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %64 : int = prim::Constant[value=4](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %65 : int = prim::Constant[value=32](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %66 : int[] = prim::ListConstruct(%56, %60, %64, %65), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %x : Float(17:1664, 13:128, 4:32, 32:1) = aten::view(%114, %66), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:244:0
    %68 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %69 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %70 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %71 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %72 : int[] = prim::ListConstruct(%68, %69, %70, %71), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %value_layer : Float(17:1664, 4:32, 13:128, 32:1) = aten::permute(%x, %72), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:245:0
    %74 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:267:0
    %75 : int = prim::Constant[value=-2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:267:0
    %76 : Float(17:1664, 4:32, 32:1, 13:128) = aten::transpose(%key_layer, %74, %75), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:267:0
    %attention_scores.47 : Float(17:676, 4:169, 13:13, 13:1) = aten::matmul(%query_layer, %76), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:267:0
    %78 : Double() = prim::Constant[value={5.65685}](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:268:0
    %attention_scores : Float(17:676, 4:169, 13:13, 13:1) = aten::div(%attention_scores.47, %78), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:268:0
    %80 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:271:0
    %input.446 : Float(17:676, 4:169, 13:13, 13:1) = aten::add(%attention_scores, %attention_mask, %80), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:271:0
    %82 : int = prim::Constant[value=-1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # torch/nn/functional.py:1498:0
    %83 : None = prim::Constant(), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %input.447 : Float(17:676, 4:169, 13:13, 13:1) = aten::softmax(%input.446, %82, %83), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # torch/nn/functional.py:1498:0
    %115 : Tensor = prim::CallMethod[name="forward"](%4, %input.447)
    %context_layer.47 : Float(17:1664, 4:416, 13:32, 32:1) = aten::matmul(%115, %value_layer), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:280:0
    %87 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %88 : int = prim::Constant[value=2](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %89 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %90 : int = prim::Constant[value=3](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %91 : int[] = prim::ListConstruct(%87, %88, %89, %90), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %92 : Float(17:1664, 13:32, 4:416, 32:1) = aten::permute(%context_layer.47, %91), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %93 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %context_layer : Float(17:1664, 13:128, 4:32, 32:1) = aten::contiguous(%92, %93), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:281:0
    %95 : int = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:282:0
    %96 : int = aten::size(%context_layer, %95), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:282:0
    %97 : Long() = prim::NumToTensor(%96), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %98 : int = aten::Int(%97), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %99 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:282:0
    %100 : int = aten::size(%context_layer, %99), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:282:0
    %101 : Long() = prim::NumToTensor(%100), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %102 : int = aten::Int(%101), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %109 : int = prim::Constant[value=128](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:283:0
    %110 : int[] = prim::ListConstruct(%98, %102, %109), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self
    %input.448 : Float(17:1664, 13:128, 128:1) = aten::view(%context_layer, %110), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self # transformers/modeling_mobilebert.py:283:0
    return (%input.448)

MobileBertSelfAttention.dropout
Dropout._actual_script_module
  graph(%self.1036 : __torch__.torch.nn.modules.dropout.Dropout,
        %input.447 : Float(17:676, 4:169, 13:13, 13:1)):
    %2 : float = prim::Constant[value=0.10000000000000001](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.dropout # torch/nn/functional.py:973:0
    %attention_probs : Float(17:676, 4:169, 13:13, 13:1) = aten::dropout(%input.447, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.dropout # torch/nn/functional.py:973:0
    return (%attention_probs)

MobileBertSelfAttention.key
Linear._actual_script_module
  graph(%self.1034 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1034)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1034)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.key # torch/nn/functional.py:1676:0
    %output.350 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.key # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.key # torch/nn/functional.py:1678:0
    %x.141 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.350, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.key # torch/nn/functional.py:1678:0
    return (%x.141)

MobileBertSelfAttention.query
Linear._actual_script_module
  graph(%self.1033 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1033)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1033)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.query # torch/nn/functional.py:1676:0
    %output.349 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.query # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.query # torch/nn/functional.py:1678:0
    %x.139 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.349, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.query # torch/nn/functional.py:1678:0
    return (%x.139)

MobileBertSelfAttention.value
Linear._actual_script_module
  graph(%self.1035 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1035)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1035)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.value # torch/nn/functional.py:1676:0
    %output.351 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.value # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.value # torch/nn/functional.py:1678:0
    %x.143 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.351, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.self/__module.mobilebert.encoder.layer.23.attention.self.value # torch/nn/functional.py:1678:0
    return (%x.143)

MobileBertSelfOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1039 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.188 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1039)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1039)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.188, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.449 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.449)

MobileBertSelfOutput.dense
Linear._actual_script_module
  graph(%self.1038 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1038)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1038)
    %4 : Float(128:1, 128:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.dense # torch/nn/functional.py:1676:0
    %output.352 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.116 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.352, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.attention/__module.mobilebert.encoder.layer.23.attention.output/__module.mobilebert.encoder.layer.23.attention.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.116)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1059 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1059)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1059)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.intermediate/__module.mobilebert.encoder.layer.23.intermediate.dense # torch/nn/functional.py:1676:0
    %output.359 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.intermediate/__module.mobilebert.encoder.layer.23.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.intermediate/__module.mobilebert.encoder.layer.23.intermediate.dense # torch/nn/functional.py:1678:0
    %input.459 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.359, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.intermediate/__module.mobilebert.encoder.layer.23.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.459)

MobileBertOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1062 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.192 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1062)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1062)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.192, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.461 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.461)

MobileBertOutput.bottleneck
OutputBottleneck._actual_script_module
  graph(%self.1063 : __torch__.transformers.modeling_mobilebert.OutputBottleneck,
        %1 : Float(17:1664, 13:128, 128:1),
        %2 : Float(17:6656, 13:512, 512:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1063)
    %4 : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="dropout"](%self.1063)
    %5 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1063)
    %11 : Tensor = prim::CallMethod[name="forward"](%5, %1)
    %12 : Tensor = prim::CallMethod[name="forward"](%4, %11)
    %8 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %input_tensor : Float(17:6656, 13:512, 512:1) = aten::add(%12, %2, %8), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck # transformers/modeling_mobilebert.py:384:0
    %13 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor)
    return (%13)

MobileBertOutput.dense
Linear._actual_script_module
  graph(%self.1061 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1061)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1061)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.dense # torch/nn/functional.py:1676:0
    %output.360 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.dense # torch/nn/functional.py:1678:0
    %layer_output : Float(17:1664, 13:128, 128:1) = aten::add_(%output.360, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.dense # torch/nn/functional.py:1678:0
    return (%layer_output)

OutputBottleneck.LayerNorm
NoNorm._actual_script_module
  graph(%self.1066 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1066)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1066)
    %4 : Float(17:6656, 13:512, 512:1) = aten::mul(%input_tensor, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.463 : Float(17:6656, 13:512, 512:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.463)

OutputBottleneck.dense
Linear._actual_script_module
  graph(%self.1064 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1064)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1064)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %output.361 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dense # torch/nn/functional.py:1678:0
    %input.462 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.361, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dense # torch/nn/functional.py:1678:0
    return (%input.462)

OutputBottleneck.dropout
Dropout._actual_script_module
  graph(%self.1065 : __torch__.torch.nn.modules.dropout.Dropout,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : float = prim::Constant[value=0.](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %3 : bool = prim::Constant[value=0](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dropout # torch/nn/functional.py:973:0
    %layer_outputs : Float(17:6656, 13:512, 512:1) = aten::dropout(%1, %2, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.output/__module.mobilebert.encoder.layer.23.output.bottleneck/__module.mobilebert.encoder.layer.23.output.bottleneck.dropout # torch/nn/functional.py:973:0
    return (%layer_outputs)

Bottleneck.attention
BottleneckLayer._actual_script_module
  graph(%self.1028 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1028)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1028)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

Bottleneck.input
BottleneckLayer._actual_script_module
  graph(%self.1025 : __torch__.transformers.modeling_mobilebert.BottleneckLayer,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1025)
    %3 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1025)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6)
    return (%7)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.1027 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1027)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1027)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %residual_tensor : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%residual_tensor)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.1026 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1026)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1026)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %output.347 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.dense # torch/nn/functional.py:1678:0
    %input_tensor.186 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.347, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.input/__module.mobilebert.encoder.layer.23.bottleneck.input.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.186)

BottleneckLayer.LayerNorm
NoNorm._actual_script_module
  graph(%self.1030 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1030)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1030)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%1, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.445 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.445)

BottleneckLayer.dense
Linear._actual_script_module
  graph(%self.1029 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1029)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1029)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %output.348 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    %input_tensor.187 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.348, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.bottleneck/__module.mobilebert.encoder.layer.23.bottleneck.attention/__module.mobilebert.encoder.layer.23.bottleneck.attention.dense # torch/nn/functional.py:1678:0
    return (%input_tensor.187)

FFNLayer._actual_script_module
  graph(%self.1040 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.1040)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.1040)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1041 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1041)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.451 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.intermediate # torch/nn/functional.py:1119:0
    return (%input.451)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.1043 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1043)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1043)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.189 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.189)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1042 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1042)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1042)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.intermediate/__module.mobilebert.encoder.layer.23.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %output.353 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.intermediate/__module.mobilebert.encoder.layer.23.ffn.0.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.intermediate/__module.mobilebert.encoder.layer.23.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    %input.450 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.353, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.intermediate/__module.mobilebert.encoder.layer.23.ffn.0.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.450)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1045 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.189 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1045)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1045)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.189, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.452 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.452)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.1044 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1044)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1044)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %output.354 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.117 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.354, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.0/__module.mobilebert.encoder.layer.23.ffn.0.output/__module.mobilebert.encoder.layer.23.ffn.0.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.117)

FFNLayer._actual_script_module
  graph(%self.1046 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.1046)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.1046)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1047 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1047)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.454 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.intermediate # torch/nn/functional.py:1119:0
    return (%input.454)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.1049 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1049)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1049)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.190 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.190)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1048 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1048)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1048)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.intermediate/__module.mobilebert.encoder.layer.23.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %output.355 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.intermediate/__module.mobilebert.encoder.layer.23.ffn.1.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.intermediate/__module.mobilebert.encoder.layer.23.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    %input.453 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.355, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.intermediate/__module.mobilebert.encoder.layer.23.ffn.1.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.453)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1051 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.190 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1051)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1051)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.190, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.455 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.455)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.1050 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1050)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1050)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %output.356 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.118 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.356, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.1/__module.mobilebert.encoder.layer.23.ffn.1.output/__module.mobilebert.encoder.layer.23.ffn.1.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.118)

FFNLayer._actual_script_module
  graph(%self.1052 : __torch__.transformers.modeling_mobilebert.FFNLayer,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.transformers.modeling_mobilebert.FFNOutput = prim::GetAttr[name="output"](%self.1052)
    %3 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate = prim::GetAttr[name="intermediate"](%self.1052)
    %6 : Tensor = prim::CallMethod[name="forward"](%3, %1)
    %7 : Tensor = prim::CallMethod[name="forward"](%2, %6, %1)
    return (%7)

FFNLayer.intermediate
MobileBertIntermediate._actual_script_module
  graph(%self.1053 : __torch__.transformers.modeling_mobilebert.MobileBertIntermediate,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1053)
    %5 : Tensor = prim::CallMethod[name="forward"](%2, %1)
    %input.457 : Float(17:6656, 13:512, 512:1) = aten::relu(%5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.intermediate # torch/nn/functional.py:1119:0
    return (%input.457)

FFNLayer.output
FFNOutput._actual_script_module
  graph(%self.1055 : __torch__.transformers.modeling_mobilebert.FFNOutput,
        %1 : Float(17:6656, 13:512, 512:1),
        %2 : Float(17:1664, 13:128, 128:1)):
    %3 : __torch__.transformers.modeling_mobilebert.NoNorm = prim::GetAttr[name="LayerNorm"](%self.1055)
    %4 : __torch__.torch.nn.modules.linear.Linear = prim::GetAttr[name="dense"](%self.1055)
    %9 : Tensor = prim::CallMethod[name="forward"](%4, %1)
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %input_tensor.191 : Float(17:1664, 13:128, 128:1) = aten::add(%9, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output # transformers/modeling_mobilebert.py:466:0
    %10 : Tensor = prim::CallMethod[name="forward"](%3, %input_tensor.191)
    return (%10)

MobileBertIntermediate.dense
Linear._actual_script_module
  graph(%self.1054 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1054)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1054)
    %4 : Float(128:1, 512:128) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.intermediate/__module.mobilebert.encoder.layer.23.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %output.357 : Float(17:6656, 13:512, 512:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.intermediate/__module.mobilebert.encoder.layer.23.ffn.2.intermediate.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.intermediate/__module.mobilebert.encoder.layer.23.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    %input.456 : Float(17:6656, 13:512, 512:1) = aten::add_(%output.357, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.intermediate/__module.mobilebert.encoder.layer.23.ffn.2.intermediate.dense # torch/nn/functional.py:1678:0
    return (%input.456)

FFNOutput.LayerNorm
NoNorm._actual_script_module
  graph(%self.1057 : __torch__.transformers.modeling_mobilebert.NoNorm,
        %input_tensor.191 : Float(17:1664, 13:128, 128:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1057)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1057)
    %4 : Float(17:1664, 13:128, 128:1) = aten::mul(%input_tensor.191, %3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %5 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    %input.458 : Float(17:1664, 13:128, 128:1) = aten::add(%4, %2, %5), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.LayerNorm # transformers/modeling_mobilebert.py:154:0
    return (%input.458)

FFNOutput.dense
Linear._actual_script_module
  graph(%self.1056 : __torch__.torch.nn.modules.linear.Linear,
        %1 : Float(17:6656, 13:512, 512:1)):
    %2 : Tensor = prim::GetAttr[name="bias"](%self.1056)
    %3 : Tensor = prim::GetAttr[name="weight"](%self.1056)
    %4 : Float(512:1, 128:512) = aten::t(%3), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %output.358 : Float(17:1664, 13:128, 128:1) = aten::matmul(%1, %4), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.dense # torch/nn/functional.py:1676:0
    %6 : int = prim::Constant[value=1](), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.dense # torch/nn/functional.py:1678:0
    %layer_outputs.119 : Float(17:1664, 13:128, 128:1) = aten::add_(%output.358, %2, %6), scope: __module.mobilebert/__module.mobilebert.encoder/__module.mobilebert.encoder.layer.23/__module.mobilebert.encoder.layer.23.ffn.2/__module.mobilebert.encoder.layer.23.ffn.2.output/__module.mobilebert.encoder.layer.23.ffn.2.output.dense # torch/nn/functional.py:1678:0
    return (%layer_outputs.119)

